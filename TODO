check HtmlFile id 4291 in production (Sokolov) -- currently crashing on charset 
+ add an auth system
+ add detection of encoding problems to HtmlFile.analyze, and to appropriate tallies etc.
  + possibly implement an auto-fixer for those?
    + yes!  Today we have learned that 0xCA is invalid in CP-1255, and yet Word sometimes(?) generates that instead of a proper xolam (0xC9) for some obscure reason.  We'll sub() this.
+ handle footnotes
- detect indentation? (poetry, letter signatures, etc.)
- detect size changes
- handle ul and ol tags?
+ handle non-footnote links
- handle titles
- handle subtitles
- handle entities, and escaping
- handle asterisks, horizontal rules
- detect and do something intelligent about extraneous spaces at beginning of paragraphs, avoiding letting them become PRE blocks
- gather info for later cataloguing -- title, author, translator, copyright status, dedication/epigraph, year/location, ...?
- add markdown manipulations post-parsing
-+ chop title/author lines from top
-+ treat as poetry (<code><pre>)
-- raw edit (versioned?  just backup/undo?)
- add an exclusion list to rake populate
- when publishing a parsed HtmlFile:
  - allow to verify/edit title and author
  - allow to insert magic sequences to break between different Works in the HtmlFile (think short poems), and post-submit show a form for titles for each before publishing separate Manifestations and Works for each
+ add way to bless markdown by human reviewer
-- blessing should, whether automatically or as an extra human-chosen step, also post the blessed markdown (with path info etc.) to the CONTENT system, so it can be rendered from it INSTEAD of the old HTML file (preserving the *.html URL)
- support a configurable set of auto fixes for post-processing markdown
  - e.g. match_all nun-sofit+non-whitespace, offer to replace with vav
  - e.g. match_all ' " ' for mis-spaced quotes
  - e.g. match sofiyot in middle of words
- figure out if the NLI can give us anything useful via Z39.50 re author identities.  http://web.nli.org.il/sites/NLI/English/infochannels/librarians/Pages/Z39.50.aspx  (on the face of it, it doesn't look as though we can query the authority file itself!)  
  - other useful URLs: http://www.loc.gov/z3950/agency/defns/bib1.html  http://ruby-zoom.rubyforge.org/ https://github.com/bricestacey/ruby-zoom/blob/master/sample/needle.rb

- 
