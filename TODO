EbyDict-Integration TODO

- implement definition view
- EXPORT: rewrite deftext links to point to refer to seqno
- IMPORT: rewrite deftext links to translate seqno references to dict_entry_path()
- cronjob for exports
- cronjob for imports (staging for now, eventually production)
- link stats header to EbyDict entity (staging, prod) [eventually, link instead to genre query for lexicon, but only after figuring out what to do with non-ebydict lexica]
- add lexicon_metadata table
  - total_headwords
  - display mode (html-markdown; dictionary-entries)
  - intro text template

Older TODO
- add complementary query when date filter selected, counting excluded no-date results
- implement showing of excluded no-date results
- autocomplete for author names in filters
- multi-select for author names in filters (screen 0843)
- multi-select in results list (screen 0850, 0980)
- mark items already in anthology in results list ?
- implement bookmarks (see notes in code!) (place bookmark on a select P, or the very previous one if H?, or just the first P if no prev P.  Figure out the P's ordinal under #maintext and store that as the bookmark.)
- generalize user persistency over actual User records versus cookie-based semi-ephemeral saved settings

IDEA: now that we have picture support - maybe allow VARIANTS of existing manifestations, with (trusted) user-curated illustrated editions (taking from Commons etc.)
- emit pics in print/export
- Implement Capistrano deployment in production: https://github.com/capistrano/capistrano/blob/master/README.md
  - staging works

- cron or timed job to expire sessions
- cron or timed job to tally and delete impressions records
- report/task to find reversed paragraphs using hspell and a count of unrecognized words

==Bib Workshop==
grab DDC ids for Raanana through gared (async?)

- resolve narrow width issue in work read view - newlines become <p> tags for some reason!  Doesn't happen in edit mode, without the markdown.lines manipulation!

- add link type "original text URL" for translations (e.g. in Gutenberg or a foreign-language Wikisource)
- add additional translated_from field to expression, for cases where the original language of the work is not the language this expression was translated from. (e.g. Shlonsky's Hamlet translation from Russian.)

- BACKEND
  - add dropdown with expression details history *per author* to save work typing it for other expressions by that author.
  - add lock_version column to person, work, expression, and manifestation tables
  - implement taggings review
  - EPIC: have works automatically tagged as belonging to a book/collection (WEM!) according to (human-confirmed) heading from the ToC
  - show revisions of manifestations/ToCs
  - show diffs between revs
  - restore rev over current
  - query work by tag
  - admin review, approve/reject tags and recommendations

- !! add translations box to works view right side
- make tags links to works queries by tag (query already works, at /tag/:id)
- implement recommendation flagging (data model, review)
- implement those-who-read-this-also-read-that (i.e. https://measuringu.com/affinity-analysis/)
- implement references-to-this-work
- (?) other extras at bottom of work read
- implement chapter-only display
- implement WhatsApp Web when detected Desktop
- implement favoriting authors
- download as TXT - add CR+LF if user runs Windows
+ download as DOC - right-align (pandoc patch?)
- download as any format -- ensure title and authorship metadata properly emitted (apparently not currently the case in PDF?)

- INTEROP
  - Be FAIR - https://www.go-fair.org/fair-principles/

- HOMEPAGE
  - featured content full text view
  - carousel of featured content

- homepage bottom -- popular authors *this month*
  - need to calculate in controller
- process ToCs
  - process bad ToCs (bad_tocs.txt)

- SEARCH
  - literal search, including quoted phrases
  - remove ' and " during indexing, and from query strings (" only from *middle* of words, e.g. מפא"י, to still allow quoted phrases search)
  - weight work titles highest after authors
- SEARCH RESULTS
  - implemented sort/filter (like the browse views in manifestations)
    - how to deal with heterogeneous results, though?

- BACKEND
  - UX throughout
  - missing maintenance reports

- user prefs infrastructure for anons!
  + store fontsize pref

* always: rake notes
* fix RTL alignment in downloaded DOC files
* set fonts in HTML, DOC, PDF(?), EPUB(?), MOBI(?)
check HtmlFile id 4291 in production (Sokolov) -- currently(??) crashing on charset
- maybe switch to a print CSS rather than a print action/view?  crucial code is @media print {
  div.info, div#editStuff, div#navigation, div#debug {
    display: none;
  }
}

- chop_head didn't work on negev
- kabak's ToC didn't update
- parallel with original in render_html

- make public_domain non-boolean, to allow "published after failing to identify owners"

Conversion system
-----------------
- detect indentation? (poetry, letter signatures, etc.)
- detect size changes
- handle ul and ol tags?
- handle titles
+ handle subtitles
  - test on greater variety of files to ensure it works
+ handle entities, and escaping
+ handle asterisk-separator-lines as horizontal rules
+ handle En-dash horizontal rules
- detect and do something intelligent about extraneous spaces at beginning of paragraphs, avoiding letting them become PRE blocks
- gather info for later cataloguing -- title, author, translator, copyright status, dedication/epigraph, year/location, ...?
- add markdown manipulations post-parsing
-+ chop title/author lines from top
-+ treat as poetry (<code><pre>)
-+ compress spaces
-- raw edit (versioned?  just backup/undo?)
- when publishing a parsed HtmlFile:
  - allow to verify/edit title and author
  - allow to insert magic sequences to break between different Works in the HtmlFile (think short poems), and post-submit show a form for titles for each before publishing separate Manifestations and Works for each
- support a configurable set of auto fixes for post-processing markdown
  - e.g. match_all nun-sofit+non-whitespace, offer to replace with vav
  - e.g. match_all ' " ' for mis-spaced quotes
  - e.g. match sofiyot in middle of words
- figure out if the NLI can give us anything useful via Z39.50 re author identities.  http://web.nli.org.il/sites/NLI/English/infochannels/librarians/Pages/Z39.50.aspx  (on the face of it, it doesn't look as though we can query the authority file itself!)
  - other useful URLs: http://www.loc.gov/z3950/agency/defns/bib1.html  http://ruby-zoom.rubyforge.org/ https://github.com/bricestacey/ruby-zoom/blob/master/sample/needle.rb

+ add way to bless markdown by human reviewer
-- blessing should, whether automatically or as an extra human-chosen step, also post the blessed markdown (with path info etc.) to the CONTENT system, so it can be rendered from it INSTEAD of the old HTML file (preserving the *.html URL)
- research and possibly integrate good editor -- or just spiff up ContentEditable?

Proof and Recommendation feature
--------------------------------
- add JS input for blog url when announcing blogged recommendation
- add auto-expiration (or hiding?) of wontfix proofs and rejected recommendations

+ figure out a stable representation for poetry with line breaks
  + PRE blocks ignore *bold* markup, so are probably infeasible
  + blockquotes (lines beginning with '>' do honor bold and other markup, but the linebreak behavior seems inconsistent -- it appears the double-space-and-line-break method does not consistently produce line breaks *inside* a blockquote (but *does* before/after an explicit <br> tag!), so probably <br> tags are necessary to ensure space lines between stanzas.  Needs further experimentation to determine how to consistently generate just the right amount of space.

== Epics ==
* Add TESTS
* Upgrade to Rails 6.x
