.top-element.backend
  %h1= @author.name
  %b= t(:sort_name)
  = @author.sort_name
  - unless @author.period.nil? || @author.period.empty?
    %h2= t(:period)+': '+t(@author.period)
  %p
    %br
  %p
    %b= t(:last_update)+': '
    = @author.updated_at.to_s
  %p
    %b= t(:metadata_approved)+': '
    = @author.metadata_approved ? t(:yes) : t(:no)
  / partials?
  %p
    %b{ style: 'font-size: 2rem'}
      = link_to t(:edit_metadata), authors_edit_path(id: @author.id)
  %br
  %p
    - unless @author.toc.nil?
      %b{ style: 'font-size: 2rem'}
        = link_to t(:edit_toc), authors_edit_toc_path(id: @author.id)
  %table
    %tr
      %td
        %h2= t(:basic_details)
      %td
        %h2= t(:identifiers)
    %tr
      %td
        / ===== basic info =====
        %b= t(:life_years)
        != @author.life_years
        = '('+t(:x_years_ago, years: @author.died_years_ago)+')'
        %br
        %b= t(:copyright_status)
        - if @author.public_domain.nil?
          %span{style: 'color:red'}= t(:unknown)
        - else
          - if @author.public_domain
            %span{style: 'color:green'}= t(:public_domain)
          - else
            %span{style: (@author.died_years_ago > 70 ? 'color:red' : 'color:green')}= t(:by_permission)
        %br
        %b= t(:gender)
        = t(@author.gender.nil? ? :unknown : @author.gender)
        %br
        %b= t(:other_designation)
        = @author.other_designation
        %br
        %b= t(:country)
        = @author.country
        %br
        %b= t(:toc_status)
        = (@author.toc.nil? || @author.toc.status.nil?) ? t(:no_toc_yet) : t(@author.toc.status)
        %br
        %b= t(:comments)
        = @author.comment
      %td
        / ===== Identifiers =====
        %b= t(:nli_id)
        = @author.nli_id
        %br
        %b= t(:viaf_id)
        != "&rlm;"
        = @author.viaf_id
        %br
        %b= t(:blog_category_url)
        - unless(@author.blog_category_url.nil? or @author.blog_category_url.empty?)
          %a{ href: @author.blog_category_url}= t(:link)
        %br
        %b= t(:wikidata_id)
        - unless @author.wikidata_id.nil?
          %a{ href: "https://wikidata.org/wiki/Q#{@author.wikidata_id}"}= @author.wikidata_id.to_s
        %br
        %b= t(:wikipedia_url)
        - unless @author.wikipedia_url.nil? or @author.wikipedia_url.empty?
          %a{ href: @author.wikipedia_url}= t(:to_the_wikipedia_article)
    %tr
      %td
        %h2= t(:content)
      %td
        %h2= t(:photo)
    %tr
      %td
        %b= t(:bib_done)
        - if @author.bib_done
          %span{style: 'color:green'}= link_to t(:yes), bib_person_path({person_id: @author.id})
        - else
          %span{style: 'color:red'}= link_to t(:no), bib_person_path({person_id: @author.id})
        %br
        %b= t(:works)
        = link_to "#{@author.original_works.count} #{t(:original_works)}", author_toc_path(id: @author.id)
        %br
        %b= t(:translations_by)
        = link_to "#{@author.translations.count} #{t(:translations)}", author_toc_path(id: @author.id)
        %br
        %b= t(:works_about)
        = t(:TBD)
      %td
        %p
          = image_tag @author.profile_image.url(:thumb), alt: @author.name
        - if @author.profile_image.file?
          %br
          = link_to t(:delete_photo), delete_author_photo_path(id: @author.id), data: {confirm: t(:are_you_sure)}

  %p
  = link_to t(:back), authors_list_path

  /    t.text     "comment",           limit: 65535
  /    t.datetime "created_at",                      null: false
  /    t.datetime "updated_at",                      null: false
  /    t.integer  "toc_id",            limit: 4
  /  has_and_belongs_to_many :work
  /  has_and_belongs_to_many :expression
  /  has_and_belongs_to_many :manifestation

