#anth_container
  != "<script src=\"https://cdnjs.cloudflare.com/ajax/libs/markdown-it/10.0.0/markdown-it.min.js\"></script>"

  - if @anthology.nil?
    .anthology#anth_panel{style: 'display: none'}
  - else
    = render partial: 'shared/anth_curated'
    .by-popup-v02.narrow-popup#rename_dlg{style: 'display: none'}
      .by-card-header-v02.desktop-only
        %span.headline-1-v02.desktop-only= t(:rename_this_anthology)
        %a.popup-x-v02.hide_rename -
      .by-card-content-v02.card-with-button
        %p= t(:type_new_name_below)
        %input.field-v02#new_title{:type => "text", value: @anthology.title}/
        .no-header
        .bottom-left-buttons
          %button.by-button-v02.by-button-secondary-v02.hide_rename
            %div= t(:cancel)
          %button.by-button-v02#rename_btn= t(:save)

    .anthology#anth_panel{style: 'display: block'}
      .by-card-header-v02.desktop-only
        %button.by-button-secondary-v02.horizontal-collapse-expand#anth_collapser{style:'border:none', 'data-dismiss'=>'modal'}
        #anthology-select
          /.anthology-select-desktop
          /  .field-v02
          = select_tag :anthologies, options_for_select(anthology_select_options, @selected_anthology), {style:'width:300px'}
        .anthology-select-mobile
        %a.popup-x-v02.pointer{'data-dismiss'=>'modal'} -
        .anthologies-actions-area
          .icons-group-v02
            %button.icon-btn.icon-bybook#display-anthology
            .actions-description#display-anthology-description= t(:display_anthology_description)
            %button.icon-btn.icon-bydownload#download-anthology{'data-toggle' => 'modal', 'data-target' => '#downloadAnthologyDlg'}
            .actions-description#download-anthology-description= t(:download_description)
            %button.icon-btn.icon-byprint#print-anthology
            .actions-description#print-anthology-description= t(:print_description)
            %button.icon-btn#copy-anthology= '['
            .actions-description#copy-anthology-description= t(:copy_description)
            %button.icon-btn.icon-bydelete#delete-anthology
            .actions-description#delete-anthology-description= t(:delete_description)
            %button.icon-btn.icon-byshare#share-anthology{'data-toggle' => 'modal', 'data-target' => '#shareAnthologyDlg'}
            .actions-description#share-anthology-description= t(:share_description)
          #anthology-status
            %span.anthology-status-label= t(:access_control)
            /.anthology-status-desktop
            = select_tag :access, options_for_select(Anthology.accesses.map{|a| [t(a[0]), a[0]]}, ((@anthology.nil? || @anthology.access.nil?) ? nil : @anthology.access)), {style:'width:140px'}
            .anthology-select-mobile
      .by-card-content-v02
        - unless @anthology.nil?
          .rotate= @anthology.title
        .anthology-cards-area
          #anth_stats
            = render partial: 'shared/anth_stats'
          .mainlist
            %ol#anth_texts
              - unless @anthology.nil?
                - @anthology.ordered_texts.each do |text|
                  %li{id: 'anth_text_'+text.id.to_s}
                    %div{'class' => "by-card-v02" + (text.manifestation_id.nil? ? ' self-created-text' : '')}
                      .anthology-card-header
                        .drag-handle
                          .handle
                        .anthology-headline
                          - if text.manifestation_id.nil?
                            = t(:curated_text_bit)+': '+text.title
                            /%span.by-icon-v02.markdown-icon _
                          - else
                            = link_to text.manifestation.title + ' / ' + text.manifestation.author_string, manifestation_read_path(text.manifestation_id)
                        %button.vertical-expand{id: "collat#{text.id}", 'data-toggle' => 'collapse', 'data-target' => "#at#{text.id}"}
                        %button.icon-btn.icon-bydelete.delbutton{id: "del#{text.id}"}
                        - if text.manifestation_id.nil?
                          %button.icon-btn.icon-byedit.editmdbutton{id: "edit#{text.id}"}
                        .atcoll.collapse.in{id: "at#{text.id}"}
                          - if text.manifestation_id.nil?
                            .row.anthology-nested-content
                              .col-md-4.col-sm-12
                                %div
                                  %span{:style => "font-weight:bold"}= t(:a_date)+': '
                                  %span= text.updated_at.strftime('%d.%m.%Y')
                              .col-md-4.col-sm-12
                                %div{:style => "padding-bottom: 12px"}
                                  %span{:style => "font-weight:bold"}= t(:word_count)+': '
                                  %span= text.body.split.count
                          - else
                            .row.anthology-nested-content
                              .col-md-4.col-sm-12
                                %div{:style => "padding-bottom: 12px"}
                                  %span{:style => "font-weight:bold"}= t(:genre)+': '
                                  %span= textify_genre(text.manifestation.expressions[0].genre)
                              .col-md-4.col-sm-12
                                %div{:style => "padding-bottom: 12px"}
                                  %span{:style => "font-weight:bold"}= t(:page_count)+': '
                                  %span= text.page_count
                            %div
                              - if text.manifestation.copyright?
                                %span.by-icon-v02.copyright-icon> x
                                = textify_copyright_status(true)
                                = link_to '[?]', '#', 'data-toggle' => 'popover', 'data-trigger' => 'focus', title: t(:about_permission), 'data-content' => t(:permission_popover)
                              - else
                                %span.by-icon-v02.copyright-icon> m
                                = textify_copyright_status(false)
                                = link_to '[?]', '#', 'data-toggle' => 'popover', 'data-trigger' => 'focus', title: t(:about_public_domain), 'data-content' => t(:public_domain_popover)
        .bottom-right-buttons
          #add_work_block{style: 'display: none'}
            .by-button-v02.by-button-secondary-v02#add_work_btn
              .right-side-icon.icon-byadd
              %div= t(:add_this_work_to_anthology)
          .by-button-v02.by-button-secondary-v02.notyet
            .right-side-icon.icon-byadd
            %div= t(:add_works_to_anthology)
          .by-button-v02.by-button-secondary-v02#add_curated_btn
            .right-side-icon.icon-byadd
            %div= t(:add_curated_text)
:javascript
  $(document).ready(function() {
    var cur_anth = #{@anthology.nil? ? 0 : @anthology.id};
    var m = null;
    $('.atcoll').on('shown.bs.collapse', function() {
      $("#coll"+this.id).find('.by-icon-v02').text(']');
    });
    $('.atcoll').on('hidden.bs.collapse', function() {
      $("#coll"+this.id).find('.by-icon-v02').text('<');
    });
    if(/\/read\//.test(window.location)) {
      $('#add_work_block').css('display', 'inline');
      m = $(location).attr("href").split('/').pop();
    }
    $('#anth_texts').sortable({
      handle: '.drag-handle',
      start: function(e, ui) {
        // creates a temporary attribute on the element with the old index
        $(this).attr('data-previndex', ui.item.index());
      },
      update: function(e, ui) {
        // gets the new and old index then removes the temporary attribute
        var newIndex = ui.item.index();
        var oldIndex = $(this).attr('data-previndex');
        var element_id = ui.item.attr('id').replace('anth_text_','');
        //alert('id of Item moved = '+element_id+' old position = '+oldIndex+' new position = '+newIndex);
        $(this).removeAttr('data-previndex');

        ///code to pass the data using AJAX
        if (newIndex != oldIndex) {
          $.post('#{anthology_seq_path('999')}'.replace('999',cur_anth.toString()),
              { id: cur_anth, anth_text_id: element_id, old_pos: oldIndex, new_pos: newIndex }
          );
        }
      }
    });
    if(cur_anth != 0) {
      $('#access').on('change', function() {
        var new_access = $('#access option:selected').val();
        $.post('#{anthology_path(@anthology.nil? ? 0 : @anthology.id)}', {'_method':'put', 'anthology[access]': new_access} );
      });
    }
    $('#rename_btn').click(function(){
      $('#rename_btn').prop('disabled',true);
      $.post('#{anthology_path(@anthology.nil? ? 0 : @anthology.id)}', {'_method':'put', 'anthology[title]': $('#new_title').val()});
    });
    $('#anthologies').on('change', function(){
      var sel_anth = $('#anthologies option:selected').val();
      if(sel_anth == '0') { // create new anthology
        $('#anth_panel').hide();
        $('#new_anth').show();
      } else if(sel_anth == '-1') {
        $('#anth_panel').hide();
        $('#rename_dlg').show();
      } else {
        $.get('#{anthology_path(0)}'.replace('0',sel_anth)); // TODO: also change anthology ID of download and share popups, defined in read.html.haml
      }
    });
    $('#add_work_btn').click(function(e){
      e.preventDefault();
      $.ajax({
        type: "POST",
        url: '#{anthology_texts_path}',
        dataType: 'script',
        data: {
          anthology_text: {
            manifestation_id: m,
            anthology_id: #{@cur_anth_id}
          }
        }
      });
    });
    $('#add_curated_btn').click(function(e){
      e.preventDefault();
      $('#anth_panel').hide();
      $('#add_curated').show();
    });
    $('.editmdbutton').click(function(){
      text_id = this.id.replace('edit','');
      $.ajax({type: 'GET', url: "#{edit_anthology_text_path(999)}".replace('999',text_id), dataType: 'script', error: function(xhr, status, error){
        console.log("Error: "+status+"\n"+error);
      }});
      // ~~~ curated text pop-up updated by server response ~~~
      $('#anth_panel').hide();
    });
    $('#delete-anthology').click(function(e){
      if (!confirm("#{t(:are_you_sure)}")){
        return false;
      }
      $.ajax({
        type: 'DELETE',
        url: '#{anthology_path(@anthology || 0)}',
        dataType: 'script'
      });
      // ~~~ anth panel updated by server response ~~~
    });
    $('#copy-anthology').click(function() {
      if (!confirm("#{t(:confirm_clone)}")){
        return false;
      }
      $.get('#{anthology_clone_path(@anthology.nil? ? 0 : @anthology.id)}');
    });
    $('.delbutton').click(function(e){
      if (!confirm("#{t(:are_you_sure)}")){
        return false;
      }
      text_id = this.id.replace('del','');
      $.ajax({
        type: 'DELETE',
        url: '#{anthology_texts_path}/'+text_id,
        dataType: 'script'
      });
      // ~~~ anth panel updated by server response ~~~
    });
    $('#create_anth').click(function(e) {
      e.preventDefault();
      $('#new_anth').show();
      $('#no_anths').hide();
    });
    $('#opt_rlist').click(function(e){
      e.preventDefault();
      $('#opt_anth').removeClass('active');
      $('#opt_rlist').addClass('active');
      $('#listtype').val('rlist');
    });
    $('#opt_anth').click(function(e){
      e.preventDefault();
      $('#opt_anth').addClass('active');
      $('#opt_rlist').removeClass('active');
      $('#listtype').val('anth');
    });
    $('#new_anthology').on('ajax:success', function(event) {
      $('#new_anth').hide();
      $('#anth_panel').show();
    });
    $('.hide_rename').click(function(e){
      e.preventDefault();
      $('#rename_dlg').hide();
      $('#anth_panel').show();
    });
    $('#display-anthology').click(function(){
      window.open("#{@anthology.nil? ? '' : anthology_path(@anthology.id)}", '_blank');
    });
    $('#print-anthology').click(function(){
      window.open("#{@anthology.nil? ? '' : anthology_print_path(@anthology.id)}", '_blank');
    });
    var cur_anth = #{@anthology.nil? ? 0 : @anthology.id};
    if(cur_anth == 0) {
      $('#no_anths').show();
    }
    $('#folded_anth_title').text('#{@anthology.title}');
    $('#anth_collapser').click(function(){
      $('.folded-anthology').show();
    });
    $('#anth_download_form').attr('action', "#{anthology_download_path(@anthology.id)}"); // update anthology ID to download
  });