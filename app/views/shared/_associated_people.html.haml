%h3= t(:associated_persons)
%ul
- case which
  - when :work
    - @w.creations.each do |c|
      %li
        = link_to c.person.name, authors_show_path(id: c.person.id)
        = ' ('+t(c.role.nil? ? :nil : c.role)+')'
        - if edit
          = link_to t(:destroy), url_for(controller: :creations, action: :remove, id: c.id, manifestation_id: @m.id), :data => { :confirm => t(:are_you_sure) }
    - if edit
      %br
      = t(:add)
      = select_tag :add_person_w, options_from_collection_for_select(Person.order(:name), 'id','name'), include_blank: true
      = t(:in_role)
      = select_tag :role_w, options_for_select([[t(:author), Creation.roles[:author]], [t(:illustrator), Creation.roles[:illustrator]]])
      %br
  - when :expression
    - @e.realizers.each do |r|
      %li
        = link_to r.person.name, authors_show_path(id: r.person.id)
        = ' ('+t(r.role)+')'
        - if edit
          = link_to t(:destroy), url_for(controller: :realizers, action: :remove, id: r.id, manifestation_id: @m.id), :data => { :confirm => t(:are_you_sure) }
    - if edit
      %br
      = t(:add)
      = select_tag :add_person_e, options_from_collection_for_select(Person.order(:name), 'id', 'name'), include_blank: true
      = t(:in_role)
      = select_tag :role_e, options_for_select([[t(:editor), Realizer.roles[:editor]], [t(:illustrator), Realizer.roles[:illustrator]], [t(:translator), Realizer.roles[:translator]]])
      %br
  - when :manifestation
