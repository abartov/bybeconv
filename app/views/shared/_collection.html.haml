- if collection
  .collection.connectable{id: "coll_#{collection.id}"}
    .collection_insert
      .collection_insert_button
        = link_to t(:add_item), new_collection_item_path(collection_id: collection.id), remote: true, class: 'btn btn-primary btn-sm'
    - collection.collection_items.each do |ci|
      .collection_draggable_item{id: "collitem_#{ci.id}"}
        .by-card-v02
          .drag-handle{title: t(:coll_drag_tt)}
            .handle
          .draggable-content
            - if ci.item.nil?
              = ci.alt_title
            - elsif ci.item.class == Collection
              .headline-2-v02
                - if ci.item.collection_type == 'volume'
                  = t(:publication)+': '
                = link_to collection_item_string(ci), default_link_by_class(ci.item.class, ci.item.id)
                - if ci.item.collection_type == 'volume' && ci.item.publication.present?
                  %br
                  = "#{ci.item.publication.publisher_line} #{ci.item.publication.pub_year}"
              %div{style: 'margin-right: 25px;'}
                = render partial: 'shared/collection', locals: {collection: ci.item}
            - else
              .headline-3-v02
                = link_to collection_item_string(ci), default_link_by_class(ci.item.class, ci.item.id)

:javascript
  $(document).ready(function(){
    $("#coll_#{collection.id}").sortable({
      handle: '.drag-handle',
      connectWith: '.collection.connectable',
      start: function(e, ui) {
        // creates a temporary attribute on the element with the old index
        $(this).attr('data-previndex', ui.item.index());
        ui.item.attr('data-previndex', ui.item.index());
      },
      update: function(e, ui) {
        // gets the new and old index then removes the temporary attribute
        var newIndex = ui.item.index();
        var oldIndex = $(this).attr('data-previndex');
        var element_id = ui.item.attr('id').replace('collitem_','');
        //alert('id of Item moved = '+element_id+' old position = '+oldIndex+' new position = '+newIndex);
        $(this).removeAttr('data-previndex');

        ///code to pass the data using AJAX
        if (newIndex != oldIndex) {
          $.post('#{collection_apply_drag_path(collection.id)}', { coll_item_id: element_id, old_pos: oldIndex, new_pos: newIndex } );
        }
      },
      receive: function(event, ui) {
        $.post('#{collection_transplant_item_path(collection.id)}', { dest_coll_id: this.id.replace('coll_',''), src_coll_id: ui.sender[0].id.replace('coll_',''), item_id: ui.item[0].id.replace('collitem_',''), old_pos: ui.item.attr('data-previndex'), new_pos: ui.item.index() } );
        /* alert("dropped on = "+this.id); // Where the item is dropped
          alert("sender = "+ui.sender[0].id); // Where it came from
          alert("item = "+ui.item[0].id); //Which item (or ui.item[0].id) */
      }         

    });
  });