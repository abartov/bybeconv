.container-fluid.top-element#content-area
  .container-fluid#content
    .row
      .col-12.col-lg-8
        / authors
        .by-card-v02#authors-in-project
          .by-card-header-v02
            %span.headline-1-v02
              = link_to t(:authors_in_the_project), all_authors_path
            = t(:x_authors, x: @totals[:authors])
          / author carousels
          = render partial: 'shared/authors', locals: {popular_authors: @pop_authors, random_authors: [], newest_authors: @newest_authors}
        / surprise author
        .scroller#surprise-scroller
          .slide
            .by-card-v02#authors-surprise{style:'cursor:pointer'}
              .by-card-header-v02
                %span.headline-1-v02= t(:surprise_author)
              .by-card-content-v02#authors-surprise-initial
                .surprise-btn-area-v02
                  %button.by-button-v02.surprise-btn-v02.headline-2-v02= t(:surprise_me)
          .slide
            = render partial: 'shared/surprise_author', locals: {passed_mode: 'home', author: @surprise_author}

        / most read and new works
        - cache "homepage_mostread", expires_in: 6.hours do
          .by-card-v02#works-in-project
            .by-card-header-v02
              %span.headline-1-v02= t(:works_in_the_project)
              = t(:x_works, {x: @totals[:works]})
            .by-card-content-v02.card-with-bottom-links.works-in-project-content
              .row.top-works{style:'min-height:280px;margin:0'}
                = render partial: 'works_list', locals: {cache_key: 'top_works', label: t(:most_popular_works_this_month), collection: @pop_works, extra_class: 'works-most-read'}
                = render partial: 'works_list', locals: {cache_key: 'new_works', label: t(:newest_works), collection: @newest_works, extra_class: 'works-most-new'}
              .button-to-full-v02
                %a{style: 'font-weight:bold', href: all_works_path}
                  %span= t(:to_all_works)
                  %span.left-arrow 1
        / surprise work
        .scroller#work-surprise-scroller
          .slide
            .by-card-v02#works-surprise{style:'cursor:pointer'}
              .by-card-header-v02
                %span.headline-1-v02= t(:surprise)
              .by-card-content-v02#works-surprise-initial
                .surprise-btn-area-v02
                  %button.by-button-v02.surprise-btn-v02.headline-2-v02= t(:surprise_me)
          .slide
            = render partial: 'shared/surprise_work', locals: {passed_mode: 'home', manifestation: @surprise_work}
        / genres
        = render 'works'
        / periods
        = render 'periods'
      .col-12.col-lg-4
        / whatsnew feed
        .by-card-v02.whats-new-v02{style: 'height:1168px;'}
          #whats-new-bg
            .by-side-card-header-v02
              %p.headline-1-v02{style:'margin-bottom:0px'}
                %a{ href: whatsnew_path}= t(:whatsnew)
              %p{style:'width: 60%;margin-bottom:0px'}= t(:whatsnew_subtitle)
            .by-card-content-v02.card-with-bottom-links.whats-new-content
              - items = @cached_newsfeed.count
              - i = 1
              - @cached_newsfeed.each do |item|
                - theclass = "new-card-v02 #{(item.double || item.itemtype == 'youtube') ? ' double-height-v02' : ''}"
                - theclass += ' last-item' if i == items
                %div{ 'class' => theclass}
                  .new-info-v02= item.pinned ? '7' : ''
                  .new-card-right-v02
                    - if item.itemtype == 'publication'
                      %img.new-card-pic-v02{src: item.thumbnail_url, width: '475', height: '686' }
                    - else
                      %div{ 'class' => "new-card-type-v02 #{(item.double || item.itemtype == 'youtube') ? ' double-height-v02' : ''}"}= newsitem_glyph(item)
                  .new-card-left-v02
                    - unless item.url.nil?
                      %a{ href: item.url}
                        %p.headline-2-v02.new-headline-v02!= item.title
                    - else
                      %p.headline-2-v02.new-headline-v02!= item.title
                    %p.text-height-new!= item.body
                    - if item.itemtype == 'youtube'
                      .new-image-frame-v02
                        %iframe{frameborder: '0', scrolling: 'no', marginheight: '0', marginwidth: '0', width: '267', height: '150', type: 'text/html', allow: 'accelerometer; autoplay; encrypted-media; gyroscope; picture-in-picture', allowfullscreen:'', src: item.url.sub('watch?v=','embed/')}

                - i += 1
            .link-to-all-v02
              %a{ href: whatsnew_path}
                %b= t(:to_all_whatsnew)
                %span.left-arrow= '1'
        / work spotlight
        = render partial: 'featured_item'
        / author spotlight
        = render partial: 'featured_author'
        / volunteer spotlight
        .by-card-v02.volunteer-v02
          #volunteer-bg
            - unless @featured_volunteer.nil?
              .by-side-card-header-v02
                %p.headline-1-v02{style: 'margin-bottom: 0'}= t(:our_volunteers)
              .by-card-content-v02.volunteer-content.card-with-bottom-links
                %p.headline-2-v02= @featured_volunteer.name
                .volunteer-about-v02
                  %div
                    .volunteer-text-v02
                      %p.text-height-volunteer
                        = @featured_volunteer.bio
                        %br
                        = @featured_volunteer.about
                    .volunteer-side-pic-v02
                      %img.volunteer-pic-v02{src: @featured_volunteer.profile_image.url(:thumb)}

:javascript
  $(document).ready(function() {
    $('.footer-card').matchHeight();
    $('.row1').matchHeight();
    $('#surprise-scroller').slick({
      infinite: false,
      slidesToShow: 1,
      placeholders: false,
      slidesToScroll: 1,
      arrows: false,
      rtl: true,
      outerEdgeLimit: true,
      // appendArrows: '#scroller_container',
    });
    let author_slide;
    let work_slide;
    $('#authors-surprise').click(function(){
      $('#surprise-scroller').slick('slickNext'); // flip
      currentSlide = $('#surprise-scroller').slick('slickCurrentSlide');
      if(currentSlide != author_slide) {
        $('#surprise-scroller').append("#{escape_javascript(render(partial: 'shared/surprise_author_again'))}");
      }
    });
    $('#surprise-scroller').on('afterChange', function(event, slick, currentSlide) {
      if(currentSlide != author_slide) {
        $('#surprise-scroller').slick('slickRemove', currentSlide, true); // and discard old slide (one before currentSlide)
        $.get('/authors/get_random_author?mode=home', function(data) {
          $('#surprise-scroller').slick('slickAdd', data);
        });
      }
    });
    $('#surprise-scroller').on('beforeChange', function(event, slick, currentSlide, nextSlide) {
      author_slide = currentSlide;
    });
    $('#work-surprise-scroller').slick({
      infinite: false,
      slidesToShow: 1,
      placeholders: false,
      slidesToScroll: 1,
      arrows: false,
      rtl: true,
      outerEdgeLimit: true,
      // appendArrows: '#scroller_container',
    });
    $('#works-surprise').click(function(){
      $('#work-surprise-scroller').slick('slickNext');
      currentSlide = $('#work-surprise-scroller').slick('slickCurrentSlide');
      if(currentSlide != work_slide) {
        $('#work-surprise-scroller').append("#{escape_javascript(render(partial: 'shared/surprise_work_again'))}");
      }
    });
    $('#work-surprise-scroller').on('beforeChange', function(event, slick, currentSlide, nextSlide) {
      work_slide = currentSlide;
    });
    $('#work-surprise-scroller').on('afterChange', function(event, slick, currentSlide) {
      if(currentSlide != work_slide) {
        $('#work-surprise-scroller').slick('slickRemove', currentSlide, true); // and discard old slide (one before currentSlide)
        $.get("#{url_for(controller: :manifestation, action: :get_random, mode: :home)}", function(data) {
          $('#work-surprise-scroller').slick('slickAdd', data);
        });
      }
    });
  });
