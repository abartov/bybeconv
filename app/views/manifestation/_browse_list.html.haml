%div#spinnerdiv{style: 'display: none; top: 50%; left: 50%;'}
  #floatingCirclesG
    #frotateG_01.f_circleG
    #frotateG_02.f_circleG
    #frotateG_03.f_circleG
    #frotateG_04.f_circleG
    #frotateG_05.f_circleG
    #frotateG_06.f_circleG
    #frotateG_07.f_circleG
    #frotateG_08.f_circleG

.by-card-header-v02
  .headline-2-v02= t(:x_works_plain, {x: @total})
  .filters
    - @filters.each do |f, id, which|
      %button.tag
        = f
        %span.pointer.tag-x{'data-ele': id, 'data-which' => which}= '-'
.by-card-content-v02
  - unless @total_pages <= 1
    = render partial: 'slide_pagination'
    - if @sort == 'alphabetical'
      = render partial: 'ab_pagination'
  .select-all-with-buttons
    .select-all-checkbox
      %input#select-all{type: 'checkbox', style:'display:none'}
    .sort-buttons-area
      %button.btn-small-outline-v02#multiselect_btn
        .by-icon-top-v02.purple-v02 \
      %button.btn-small-outline-v02.notyet
        .by-icon-top-v02.purple-v02.icon-bysort-down
  .add-to-anthology{style:'display:none'}
    .left-pointing-arrow= t(:perform_add)
    %button.by-button-v02#add-to-anth-btn
      .by-icon-v02 &amp; D
  .mainlist#browse_mainlist
    - pg = @page.to_i
    %ol{style:"counter-reset:li #{pg > 1 ? (pg-1)*100 : 0}"}
      - @works.each do |m|
        %li= link_to m.title_and_authors, manifestation_read_path(m.id)
  - unless @total_pages <= 1
    = render partial: 'slide_pagination'
    - if @sort == 'alphabetical'
      = render partial: 'ab_pagination'
  = hidden_field_tag(:hurl, request.original_url)
:javascript
  /**
   * Handle Animation (Start, Reset, Restart)
   * animationProprierties | Animation name, Animation time, Animation tween (Sample: animation 1s ease-in )
   * targetElementClass    | Target element class or id (Sample: .box)
   * 	 */
  function startAnimation (animationProprierties , targetElementClass) {
    var targetElement = $(targetElementClass)
    targetElement.css('animation', animationProprierties);
    targetElement.on('animationend webkitAnimationEnd oanimationend MSAnimationEnd', function () {
    targetElement.css('animation','');
    targetElement.off();
    });
  }
  $(document).ready(function() {
    // Instantiate a slider
    var mySlider = $("input.slider").bootstrapSlider({
      tooltip: 'always',
    });
    var url = $('#hurl').val().replace(/page=\d+/, '');
    if(url.indexOf('?') == -1) {
      url = url + '?'
    }
    $("input.slider").on('slideStop', function(slideEvt){
      slideEvt.stopImmediatePropagation();
      filters = #{@emit_filters == true};
      if(filters) {
        $('#page_tag').val(slideEvt.value.toString());
        startModal('spinnerdiv');
        $('#works_filters').submit();
      } else {
        $.get(url+'&page='+slideEvt.value.toString(),'',null, 'script');
      }
    });
    $('.tag-x').click(function(){
      // uncheck/clear the appropriate field
      if($(this).attr('data-which') == 'text') {
        $('#'+$(this).attr('data-ele')).val('');
      } else {
        $('#'+$(this).attr('data-ele')).prop("checked", false);
      }
      // and submit the form
      startModal('spinnerdiv');
      $('input').attr('disabled', false); // re-enable checkboxes to preserve other filters
      $('#works_filters').submit();
    });

    $.fn.browse_multi_select_toggle = function() {
      // determine whether to toggle on or off
      if($('#browse_mainlist').hasClass('multiselect')) {
        $('#browse_mainlist').removeClass('multiselect');
        $('#select-all').hide();
        $('.add-to-anthology').hide();
        $('#browse_mainlist ol input').remove();
      } else {
        // turn on multi-select mode
        $('#browse_mainlist').addClass('multiselect');
        $('#select-all').show();
        $('#browse_mainlist li').each(function() {
          $(this).prepend("<input class=\"multiselect_checkbox\" type=\"checkbox\" />");
        });

        $('.multiselect_checkbox').change(function() {
          if($(this).prop('checked') && $('.add-to-anthology').css('display') == 'none') {
            $('.add-to-anthology').show();
           	startAnimation('blink 2s ease-in','.add-to-anthology');
          }
        });
      }
    }
    $('#multiselect_btn').click(function(){
      $.fn.browse_multi_select_toggle();
    });
    $('#select-all').change(function(){
      $('.mainlist li input[type=checkbox]').prop('checked', $(this).prop('checked'));
      if($('.add-to-anthology').css('display') == 'none' && $(this).prop('checked')) {
        $('.add-to-anthology').show();
        startAnimation('blink 2s ease-in','.add-to-anthology');
      }
    });
    $('#add-to-anth-btn').click(function() {
      if(#{@anthology.nil? ? 'true' : 'false'} == true) {
        alert('create or select an anthology first.');
      } else {
        // add to current anth
        anthology_texts = []
        $('.multiselect_checkbox:checked').each(function(){
          hr = $(this).next().attr('href');
          mid = hr.substring(hr.lastIndexOf('/')+1);
          anthology_texts.push({manifestation_id: mid, anthology_id: $('#anth_id').val()});
        });

        $.ajax({
          type: "POST",
          url: '#{mass_create_anthology_texts_path}',
          dataType: 'script',
          data: { anthology_texts }
        });

      }
      // notify user
    });
  });