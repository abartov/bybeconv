.container-fluid#header-general
  = render partial: 'shared/breadcrumbs'
  - xlatbuf = nil
  - authorbuf = nil
  - unless @m.authors.nil?
    - authorbuf = @m.authors.map {|t| link_to(t.name, author_toc_path(id: t.id))}.join(', ')
  - if @e.translation && @e.translators.size > 0
    - xlatbuf = @translators.map{|t| link_to(t.name, author_toc_path(id: t.id))}.join(', ')
  .top-space
  .work-page-top
    .work-page-top-info-card
      .work-and-author-names-mobile
        .headline-1-v02.work-name-top= @m.title
        .work-page-top-author
          .headline-3-v02
            = t(:by)+':'
            - unless authorbuf.nil?
              != authorbuf
              - unless xlatbuf.nil?
                .headline-3-v02
                  = "#{t(:translation)}: "
                  != xlatbuf
                  = " (#{t(:from_lang)}#{textify_lang(@e.works[0].orig_lang)})"
            - else
              = '?'
      .row
        .col-12
          .work-and-author-names-desktop
            .headline-1-v02.work-name-top= @m.title
            .work-page-top-author
              .headline-3-v02
                = t(:by)+':'
                - unless authorbuf.nil?
                  != authorbuf
                  - unless xlatbuf.nil?
                    .headline-3-v02
                      = "#{t(:translation)}: "
                      != xlatbuf
                      = " (#{t(:from_lang)}#{textify_lang(@e.works[0].orig_lang)})"
                - else
                  = '?'
          - if @m.chapters?
            .field-v02.work-chapters-dropdown-field-desktop#chapter_dropdown
              = t(:jump_to_chapter)
              %span.dropdown-arrow )
              .by-dropdown-content-v02.dropdown_full-width#chapter_dropdown_content
                - @chapters.each do |ch|
                  %p.pointer.jumpch.linkcolor{style:'text-overflow: ellipsis;overflow-x: hidden;', 'data-target' => "ch#{ch[1]}"}= ch[0]
                - unless @curated_content.nil?
                  .dropdown-menu-seperator
                    %a{href:'#curated'}
                      %span.by-icon-v02 Q
                      = t(:curated_content)
          .work-page-top-icons-desktop
            %a.white{:href => url_for(action: :readmode, id: @m.id)}
              %button.btn-small-outline-v02.btn-text-v02.reading-mode-btn-v02{'title' => "#{t(:readmode_tt)}", 'data-selector' => 'true', 'data-placement' => 'top', 'data-toggle' => 'tooltip', 'data-delay' => { "show": 200, "hide": 100 }}
                %span.by-icon-v02> /
                = t(:reading_mode)
            %div{class: @bookmark != 0 ? 'top-left-icons-group bookmark-added' : 'top-left-icons-group'}
            .top-left-icons-group
              .icons-group-v02
                
              %a.by-icon-v02.pointer.like.must_login{class: @liked ? 'icon-byheart-full' : 'icon-byheart-empty', 'title' => "#{t(:work_liked_tt)}", 'data-selector' => 'true', 'data-placement' => 'top', 'data-toggle' => 'tooltip', 'data-delay' => { "show": 200, "hide": 100 }, tabindex: 0}
              %a.by-icon-v02.pointer.bookmark-status.bookmark_button{'title' => "#{t(:bookmark_tt)}", 'data-selector' => 'true', 'data-placement' => 'top', 'data-toggle' => 'tooltip', 'data-delay' => { "show": 200, "hide": 100 }, tabindex: 0}
              - unless current_user
                %a.by-icon-v02.pointer.anthologies_button.must_login{tabindex: 0}= 'D'
              - else
                %a.by-icon-v02.pointer.anthologies_button{'data-toggle' => 'modal', 'title' => "#{t(:open_shelves_tt)}", 'data-selector' => 'true', 'data-placement' => 'top', 'data-toggle' => 'tooltip', 'data-delay' => { "show": 200, "hide": 100 },'data-backdrop' => 'static', 'data-keyboard' => 'false', 'data-target' => '#anthologiesDlg', tabindex: 0}
                  = 'D'
                  - unless @anthology.nil?
                    .anthology-badge{style: "display: #{@anthology.texts.length > 0 ? 'block' : 'none'}"}
                      .badge-number= @anthology.texts.length.to_s
              .icons-separator-white
              %a.by-icon-v02.pointer.citebutton{'data-toggle' => 'modal', 'title' => "#{t(:cite_tt)}", 'data-selector' => 'true', 'data-placement' => 'top', 'data-toggle' => 'tooltip', 'data-delay' => { "show": 200, "hide": 100 }, 'data-target' => '#citeDlg', tabindex: 0}= '*'
              %a.by-icon-v02.pointer.printbutton{'data-toggle' => 'tooltip', 'title' => "#{t(:work_print_tt)}", 'data-selector' => 'true', 'data-placement' => 'top', 'data-toggle' => 'tooltip', 'data-delay' => { "show": 200, "hide": 100 }, tabindex: 0}= '9'
              %a.by-icon-v02.pointer.download{'data-toggle' => 'modal', 'title' => "#{t(:work_download_tt)}", 'data-selector' => 'true', 'data-placement' => 'top', 'data-toggle' => 'tooltip', 'data-delay' => { "show": 200, "hide": 100 }, 'data-target' => '#downloadDlg', tabindex: 0}= '3'
              %a.by-icon-v02.pointer.sharebutton{title: "#{ t(:share_tt) }", 'data-selector' => 'true', 'data-placement' => 'top', 'data-toggle' => 'tooltip', 'data-delay' => { "show": 200, "hide": 100 }, style: 'margin-left:0;', tabindex: 0}= 'U'
          .chapters-and-icons-mobile
            .work-page-top-icons-mobile
              %a.btn-small-outline-v02.btn-text-v02.reading-mode-icon-btn-v02{href: url_for(action: :readmode, id: @m.id)}
                %span.by-icon-v02 /
              .top-left-icons-group
                .icons-group-v02
                  %div{class: 'like must_login linkcolor pointer by-icon-v02 icon-byheart-'+(@liked ? 'full' : 'empty')}
                  .bookmark_button.pointer.by-icon-v02.linkcolor.bookmark-status
                  #text-moreMobile.by-dropdown-v02
                    %span.linkcolor#text-nav-more
                      %span.by-icon-v02 Y
                    #text-menu-more.by-dropdown-content-v02{:style => "left: 0; margin-top: 4px"}
                      %p.anthologies_button{'data-toggle' => 'modal','data-backdrop' => 'static', 'data-keyboard' => 'false', 'data-target' => '#anthologiesDlg'}
                        %span.by-icon-v02.linkcolor> D
                        = t(:bookshelves)
                      %p.citebutton
                        %span.by-icon-v02.linkcolor> *
                        = t(:cite)
                      %p.printbutton
                        %span.by-icon-v02.linkcolor> 9
                        = t(:print)
                      %p.download
                        %span.by-icon-v02.linkcolor> 3
                        = t(:download)
            - if @m.chapters?
              .work-chapters-popup-mobile#chapter_mobile_dropdown
                %button.btn-small-outline-v02.btn-text-v02{ 'data-toggle' => 'modal', 'data-target'=> '#chapterDlg'}
                  = t(:jump_to)
    .row.error-found-row
      .side-nav-col
        - if @m.chapters?
          .side-menu-headline= t(:chapters_list)
          %nav.navbar#chapternav
            %ul.nav.navbar-nav.navbar-expand.flex-column.by-card-v02#chapter-nav{style:'width: unset', 'aria-orientation' => 'vertical'}
              - first = true
              -# %li.nav-item
              -#   %a.nav-link.nav-link-arrows
              -#     .side-menu-arrow (
              - @chapters.each do |ch|
                %li.nav-item
                  %a{'class' => 'nav-link nav-chapter-name nav-link-chapter pointer linkcolor '+(first ? ' active' : ''), href: "#ch#{ch[1]}", id: "nl#{ch[1]}", 'data-asaf' => "ch#{ch[1]}",'data-toggle' => 'tooltip', 'title' => ch[0], 'data-placement' => 'top', 'data-delay' => { "show": 500, "hide": 100 }}
                    = ch[0]
                - first = false
              -# %li.nav-item
              -#   %a.nav-link.nav-link-arrows
              -#     .side-menu-arrow )
      .col{style:'z-index:-1;height:0;'}
      .col-4.error-found-col
        %button.error-found-btn#found_mistake{title: t(:report_error_tt)}
          .error-found
            .error-found-text
              = t(:found_br_mistake_html)
            .error-found-icon g
      .col-lg-4{style:'height:min-content'}
.bookmark_notification

:javascript
  var saved_elem;
  function set_bookmark(elem) {
    $('p.bookmark').removeClass('bookmark');
    $('.bookmark_marker').remove();
    elem.addClass('bookmark');
    elem.prepend("<span class=\"bookmark_marker\">&#x43</span>");
    $('.top-left-icons-group').addClass('bookmark-added');
    $('.bookmark_marker').click(function(){
      $('#bookmarkDeleteDlg').modal('show');
    });
  };
  $(document).ready(function(){
    var bookmark = "#{raw @bookmark}";
    $(window).scroll(function() {
      var scroll = $(window).scrollTop();
      if(scroll <= 200) {
        $('.nav-link').first().addClass('active');
      }
    });
    /*$('.nav-link').click(function(e) { 
      e.preventDefault();
      $(this).tooltip('hide');
      anchor = $(this).attr('data-asaf');
      $('html, body').animate({
        scrollTop: $('a[name='+anchor+']').offset().top - $('header').height() - 45
      }, 800);
      $('header').addClass("scrolled");
      $('html, body').animate({ // re-adjust, after the header height changed
        scrollTop: $('a[name='+anchor+']').offset().top - $('header').height() - 45
      }, 0, function(){ $('.work-content').focus(); });
      
    });*/
    $('#chapter_dropdown').click(function(){
      if($('#chapter_dropdown_content').css('display') == 'block')
        $('#chapter_dropdown_content').css('display', 'none');
      else
        $('#chapter_dropdown_content').css('display', 'block');
    });

    $('#text-nav-more').click(function(){
      if($('#text-menu-more').css('display') == 'block')
        $('#text-menu-more').css('display', 'none');
      else
        $('#text-menu-more').css('display', 'block');
    });
    $('#text-moreMobile').on('show.bs.dropdown', function(){
      $("#mySidenav").removeClass('sidebar-opened')
    });

    $('.bookmark_button').click(function(e){
      if( $('p.bookmark').length > 0 ) {
        y = $(window).scrollTop()+$('#header').height()+5;
        var elements = $("#actualtext > p");
        var el;
        for (var i=0; i<elements.length; i++) {
          el = $(elements[i]);
          if (el.offset().top >= y && el.is(':visible')){
            saved_elem = el;
            break;
          }
        }
        $('#bookmarkPanelDlg').modal('show');
      } else {
        alert("#{t(:bookmark_mode_begin)}");
        $('body').css('cursor', 'crosshair');
        $('#actualtext').click(function(e){
          $('body').css('cursor', 'default');
          // set bookmark
          y = e.pageY - $(window).scrollTop();
          elem = document.elementFromPoint(e.pageX, y);
          if(elem != null) {
            csspath = $(elem).getPath();
            shortcsspath = '#actualtext '+csspath.substring(csspath.lastIndexOf('div')+3, csspath.length);
            set_bookmark($(elem));
            url = "#{raw url_for(action: :set_bookmark)}";
            $.ajax({url: url, method: 'POST', data: {id: #{@m.id}, bookmark_path: shortcsspath}});
          }
          $('#actualtext').off('click'); // disable handler
        });
      }
    });

    offsetTop = #{ @readmode ? 40 : 250 },
    $('.like').click(function(){ // toggle like/unlike
      if("#{current_user}" != '') {
        if($('.like').hasClass("icon-byheart-full")) { // already liked
          // unlike
          $.ajax({
            url: "#{url_for(action: :unlike, id: @m.id) }",
          });
          $('.like').removeClass('icon-byheart-full').addClass('icon-byheart-empty');
        } else { // like
          $.ajax({
            url: "#{url_for(action: :like, id: @m.id) }",
          });
          $('.like').removeClass('icon-byheart-empty').addClass('icon-byheart-full');
        }
      }
    });
    $('.printbutton').click(function() {
      $('#text-menu-more').css('display', 'none');
      window.open("#{@print_url}",'_blank');
    });
    $('.sharebutton').click(function(){
      $('#text-menu-more').css('display', 'none');
      $('#shareDlg').modal('show');
    });
    // ensure smooth scrollTo behavior
    $('.ch_anch').css('padding-top', $('#header').height());
    $('.ch_anch').css('margin-top', -$('#header').height());
    jumpto = "#{@jump_to_bookmarks}";
    if(bookmark != "" && bookmark != "0") {
      elem = $(bookmark);
      if(elem != null) {
        set_bookmark(elem);
      }
      if(jumpto == "true") {
        $('html, body').animate({
          scrollTop: $('.bookmark').offset().top - $('#header').height() - 30
        }, 800);
      } else if(jumpto == "") {
        $('#bookmarkBehaviorDlg').modal('show');
      }
    }
  });