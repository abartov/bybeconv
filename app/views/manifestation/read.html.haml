/ standard display mode. "reading mode" implemented in readmode.html.haml
#content.container-fluid.top-element
  .row
    .col-12.col-lg-8
      .row
        .col.work-side-menu-area
        .col
          .by-card-v02.work-info-card
            %img.about-work-card-bookmark-fold-v02{alt: t(:background), src: '/assets/creator-bookmark-back2.png'}/
            .about-work-author-card-v02
              %img.about-work-author-pic-v02{alt: @author.name, src: @author.profile_image.url(:thumb)}/
            .by-card-content-v02
              .work-title.name-under-btn
                .headline-1-v02= @m.title
                - if current_user && current_user.editor?
                  %span.static-btn= link_to t(:edit_metadata), manifestation_edit_metadata_path(@m.id)
                  != "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;"
                  %span.static-btn= link_to t(:edit_markdown), manifestation_edit_path(id: @m.id)
                  %br
                .headline-2-v02
                  != @m.authors.map {|t| link_to(t.name, author_toc_path(id: t.id))}.join(', ')
                  - if @e.translation && @e.translators.size > 0
                    %br
                    = "#{t(:translation)}: "
                    != @translators.map{|t| link_to(t.name, author_toc_path(id: t.id))}.join(', ')
                    = " (#{t(:from_lang)}#{textify_lang(@e.works[0].orig_lang)})"
              %div
                / metadata
                .work-details
                  - if @m.copyright?
                    %span.by-icon-v02.copyright-icon> m
                    = textify_copyright_status(false)
                    = link_to '[?]', '#', 'data-toggle' => 'popover', 'data-trigger' => 'focus', title: t(:about_public_domain), 'data-content' => t(:public_domain_popover)
                  - else
                    %span.by-icon-v02.copyright-icon> x
                    = textify_copyright_status(true)
                    = link_to '[?]', '#', 'data-toggle' => 'popover', 'data-trigger' => 'focus', title: t(:about_permission), 'data-content' => t(:permission_popover)
                .work-details
                  %span.by-icon-v02.internal-genre-icon>= glyph_for_genre(@e.genre)
                  = textify_genre(@e.genre)
                - if @e.translation?
                  .work-details
                    %span{:style => "font-weight:bold"}= t(:orig_lang)+': '
                    = textify_lang(@e.works[0].orig_lang)
                - unless @e.source_edition.nil? || @e.source_edition.empty?
                  .work-details
                    %span{:style => "font-weight:bold"}= t(:source_edition)+': '
                    - edition = @e.source_edition.strip
                    - unless @e.date.nil? || @e.date.empty?
                      - edition += '; '+@e.date
                    = edition
                / tags and recommendations
                .work-details.mobile-work-details
                  - if @taggings.approved.count > 0
                    %span{:style => "font-weight:bold"}= t(:tags)+': '
                    = render partial: 'shared/taggings', locals: {taggings: @taggings}
                .work-details.mobile-work-details
                  - if @recommendations.all_approved.count > 0
                    %span{:style => "font-weight:bold"}= t(:recommendations)+': '
                    %span.pointer.linkcolor#jump-to-recs= t(:this_work_has_x_recommendations, {x: @recommendations.all_approved.count})
          .by-card-v02
            .row.work-area
              .col-sm-9.work-content
                / TODO: more nuanced rendering here
                - if @m.as_prose?
                  #actualtext.maintext-prose-body.search-margin
                    != raw(@html)
                - else
                  #actualtext.maintext-poetry-body.search-margin
                    != raw(@html)
              .col-sm-3.work-side-color
                %div{'class' => "work-genre", style: "background-image: url(\"/assets/work_side_icons_#{@e.genre}.svg\"); background-repeat: no-repeat; background-size:auto;"}
    .col-12.col-lg-4
      .row
        .col
          / Works about this work
          - if @works_about.count > 0
            = render partial: 'public_aboutnesses', locals: {edit: false, add: false}
          / Recommendations
          .by-card-v02.left-side-card-v02#recs
            .by-card-header-left-v02
              %span.headline-1-v02= t(:recommendations_for_work)
            .by-card-content-v02.card-with-bottom-links
              - unless @m.like_count.nil? || @m.like_count == 0
                = t(:x_liked, {x: @m.like_count})
                %br
              - my_pendings = @recommendations.all_pending.where(user: current_user)
              - app_recs = @recommendations.all_approved
              - any_recs = app_recs.count > 0 || my_pendings.count > 0
              - total_recs = app_recs.count + my_pendings.count
              - unless any_recs
                = t(:no_recommendations_yet)
              - else
                = t(:this_work_has_x_recommendations, {x: total_recs})
                %br
                - apcounter = 1
                - app_recs.each do |r|
                  = render partial: 'recommendation', locals: {rec: r, pending: false, last_item: apcounter == total_recs ? true : false}
                  - apcounter += 1
                - my_pendings.each do |r|
                  = render partial: 'recommendation', locals: {rec: r, pending: true, last_item: apcounter == total_recs ? true : false}
                  - apcounter += 1
              / add recommendation
              - unless current_user.nil?
                .bottom-right-link{:style => "padding-top: 6px"}
                  .linkcolor.pointer#expand-add-rec
                    %span.right-side-icon &amp;
                    %span{:style => "font-weight: bold"}= t(:add_recommendation)
                #add-rec-form
                  %br
                  .card{style:'background-color:#fff'}
                    .row.recommendation{style:'min-height:inherit'}
                      .rec-user
                        .rec-user-pic
                          = render partial: 'shared/user_pic', locals:{user: current_user}
                        .rec-user-name=link_to current_user.name, user_show_path(id: current_user.id)
                      = form_for(@new_recommendation, remote: true) do |f|
                        .rec-txt
                          %div{style:'display:inline;float:right;margin-top:1.3rem;width:100%'}
                            = f.text_area(:body, size: '70x4',placeholder: t(:offer_a_recommendation), id: 'new_rec_text')
                        %div
                          = hidden_field_tag :manifestation_id, @m.id
                          %input.btn{type: :submit, value: t(:submit), style:'margin-top:2.7rem;margin-left:1.5rem;background-color:#d9cdd5'}


          / Tags
          .by-card-v02.left-side-card-v02{style:'min-height:250px'}
            .by-card-header-left-v02
              %span.headline-1-v02= t(:tags)
            .by-card-content-v02.card-with-bottom-links
              .inline-block#taggings
                = render partial: 'shared/taggings', locals: {taggings: @taggings}
              - unless current_user.nil?
                #add-tag.bottom-right-link{:style => "padding-top: 6px"}
                  .linkcolor.pointer#expand-add-tag
                    %span.right-side-icon &amp;
                    %span{:style => "font-weight: bold"}= t(:suggest_new_tag)

                #add-tag-form
                  = form_for @tagging, remote: true do
                    %div{style: 'display:inline;margin-top:0.6rem;'}
                      = autocomplete_field_tag :tag, '', autocomplete_tag_name_path, 'data-noMatchesLabel' => t(:no_matches_found)
                      = hidden_field_tag :manifestation_id, @tagging.manifestation_id
                      = hidden_field_tag :suggested_by, @tagging.suggested_by
                    %div{style: 'display:inline'}
                      %input.btn-small-outline-v02.btn-text-v02{type: :submit, value: t(:suggest_new_tag), style: 'margin-top:0.6rem;width:auto; background-color: #d9cdd5'}

          / Additional translations of same work
          - if @e.translation? && (@additional_translations != nil && @additional_translations != [])
            .by-card-v02.left-side-card-v02
              .by-card-header-left-v02
                %span.headline-1-v02= t(:additional_translations)
              .by-card-content-v02
                -  @additional_translations.each do |tr|
                  %div
                    %span
                      = link_to tr.title, manifestation_read(id: tr.manifestations[0].id)
                    %span= ' '+t(:translation)+': '
                    %span
                      != tr.translators.map{|t| link_to(t.name, author_toc_path(id: t.id))}.join(', ')

:javascript
  $(document).ready(function() {
    $('#content').css('margin-top', $(header).position().top + $(header).outerHeight(true) + 10);
    $('#jump-to-recs').click(function(){
      elem = $('#recs');
      if(elem != null && elem.position() != null)
      {
        offsetTop = $(header).position().top + $(header).outerHeight(true) + 10;
        position = elem.offset().top - offsetTop;
        window.scrollTo(0,position);
      }
    });
    $('#expand-add-tag').click(function() {
      $('#expand-add-tag').css('display','none');
      $('#add-tag-form').css('display','block');
    });
    $('#expand-add-rec').click(function() {
      $('#expand-add-rec').css('display','none');
      $('#add-rec-form').css('display','block');
    });
  });