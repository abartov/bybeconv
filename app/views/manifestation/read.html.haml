/ standard display mode. "reading mode" implemented in readmode.html.haml
#maincontainer.container-fluid.top-element
  = render partial: 'shared/breadcrumbs'
  /.scroll-gradient-b
  = render partial: 'toolbox'
  - cache @m do
    .row
      .col-md-1
      .col-md-10
        .work-name
          %p.headline-1= @m.title
          %p.headline-3{ style: 'padding:0;display:inline'}
            = t(:by)+':'
            = link_to @author.name, author_toc_path(id: @author.id)
        .work-area#work-side
          .container-fluid
            .row
              .col-md-3#work-share1{style:'padding-left: 0;padding-right: 0;'}
                = render partial: 'shared/sharing_etc'
              .col-md-9#work-metadata{style: 'padding-right:0'}
                - unless @links.empty?
                  .row
                    .col-md-10{style:'display:inline-block'}
                      - [:youtube, :blog].each do |linktype|
                        - ll = @links[Manifestation.link_types[linktype]]
                        - unless ll.nil?
                          = render partial: 'shared/work_links', locals: {linktype: linktype, links: ll}
                    .col-md-2
                      %p= t(:our_own_content)
                .row{style:'padding-top:0.6rem'}
                  .col-md-10
                    = render partial: 'shared/copyright', locals: {copyright: @m.copyright?}

                  .col-md-2
                    %p= t(:copyright_status)+':'
                - unless @book.nil?
                  .row{style:'padding-top:0.6rem'}
                    .col-md-10
                      .card-header-element{style:'margin-left:2.4rem'}
                        %p= @book
                      .card-header-element
                        = link_to '#' do
                          = t(:edition_details)
                          %span.fa.fa-angle-left.baseline{style: 'margin-right: 0.6rem'}
                    .col-md-2
                      %p= t(:published_in_book)+': '
                .row{style:'padding-top:0.6rem'}
                  .col-md-10
                    .card-header-element{style:'margin-left:2.4rem'}
                      = link_to textify_genre(@m.expressions[0].works[0].genre), url_for(action: :genre, genre: @m.expressions[0].works[0].genre)
                    .card-header-element
                      = t(:orig_lang)+': '
                      = textify_lang(@m.expressions[0].works[0].orig_lang)
                  .col-md-2
                    %p= t(:genre)+': '
                .row{style:'padding-top:0.6rem'}
                  .col-md-10
                    .card-header-element{style:'margin-left:2.4rem'}
                      = link_to '#tags' do
                        = t(:tags)
                        = "(#{@m.approved_tags.count})"
                        %span.fa.fa-angle-left.baseline{style: 'margin-right: 0.6rem'}
                    .card-header-element{style:'margin-left:2.4rem'}
                      = link_to '#recommendations' do
                        = t(:recommendations)
                        = "(#{@recommendations.approved.count})"
                        %span.fa.fa-angle-left.baseline{style: 'margin-right: 0.6rem'}
                    - unless @links.empty? || @links[Manifestation.link_types[:wikipedia]].nil?
                      .card-header-element
                        = link_to @links[Manifestation.link_types[:wikipedia]][0].url do
                          .icon.card-header-element
                            %i.fa.fa-wikipedia-w{style:'font-size: 1.4rem'}
                          .card-header-element
                            %p= t(:to_the_wikipedia_article)
                  .col-md-2
                    %p= t(:additional_content)
                %br{style: 'clear: both;'}
          .card.work-card
            .work-text
              - unless @bookmark.nil?
                .bookmark
                  / $("#button").click(function() {
                  /  $('html, body').animate({
                  /    scrollTop: $("#elementtoScrollToID").offset().top
                  /  }, 2000);
                  / });
                  = link_to '#' do
                    %span.icon-bybookmark-go-to
              .row.stickysearch{style:'opacity:1;background-color:#eeeced'}
                = render partial: 'search_and_chapters'
              / TODO: more nuanced rendering here
              - if @m.as_prose?
                #actualtext.maintext-prose-body.search-margin
                  != raw(@html)
              - else
                #actualtext.maintext-poetry-body.search-margin
                  != raw(@html)
              - if @m.chapters? and @m.long?
                = render partial: 'chapter_links'
            / place bookmark element if @bookmark
            / .bookmark
            /   = link_to '#'
            /     %i.icon-bybookmark
            .work-pic
              .work-gradient-pic
                %img{'class' => 'absolute', src: @author.profile_image.url(:full)}
      .col-md-1

.container-fluid#extra_container{style:'margin-top:3rem'}
  .row
    .col-md-1
    .col-md-10
      .work-area
        .headline-3{style: 'margin:2rem 0', 'data-toggle'=>'collapse','data-target'=>'#extra_collapsible'}
          %span.linky= t(:tags_etc_title)
          != '&nbsp;&nbsp;'
          %i.fa.chevron.baseline{style:'display:inline'}
        .row.collapse.in#extra_collapsible
          .col-md-3#more-left{style:'padding-left:0;padding-right:0'}
            #work-share2{style:'padding-top:1.6rem'}
              = render partial: 'shared/sharing_etc'
          .col-md-9#more-right{style: 'padding-right:0; padding-left: 10rem'}
            - cache "#{@m.id}_extras" do
              / תגיות
              #tags
                .headline-3= t(:tags_for_work)
                = render partial: 'shared/taggings', locals: {taggings: @taggings}
                - unless current_user.nil?
                  #add-tag{style:'display:inline;float:left'}
                    = form_for @tagging, remote: true do
                      %div{style: 'display:inline;float:right;margin-top:0.6rem;'}
                        = autocomplete_field_tag :tag, '', autocomplete_tag_name_path
                        = hidden_field_tag :manifestation_id, @tagging.manifestation_id
                        = hidden_field_tag :suggested_by, @tagging.suggested_by
                      %div{style: 'display:inline'}
                        %input.btn{type: :submit, value: t(:suggest_new_tag), style: 'margin-top:0.6rem; background-color: #d9cdd5'}
              / המלצות
              #recommendations_panel
                #recommendations
                  .headline-3{style:'display:inline'}= t(:recommendations_for_work)
                  %div{style:'display:inline;padding-right:1rem'}= t(:x_liked_y_recommended, {x: @m.like_count, y: @recommendations.approved.count})
                  - @recommendations.approved.each do |r|
                    = render partial: 'recommendation', locals: {rec: r, pending: false}
                  - my_pendings = @recommendations.pending.where(user: current_user)
                  - unless my_pendings.nil?
                    - my_pendings.each do |r|
                      = render partial: 'recommendation', locals: {rec: r, pending: true}
                / הוספת המלצה
                - unless current_user.nil?
                  .card{style:'background-color:#fff'}
                    .row.recommendation{style:'min-height:inherit'}
                      .rec-user
                        .rec-user-pic
                          = render partial: 'shared/user_pic', locals:{user: current_user}
                        .rec-user-name=link_to current_user.name, user_show_path(id: current_user.id)
                      = form_for(@new_recommendation, remote: true) do |f|
                        .rec-txt
                          %div{style:'display:inline;float:right;margin-top:1.3rem;width:100%'}
                            = f.text_area(:body, size: '70x4',placeholder: t(:offer_a_recommendation), id: 'new_rec_text')
                        %div
                          = hidden_field_tag :manifestation_id, @m.id
                          %input.btn{type: :submit, value: t(:submit), style:'margin-top:2.7rem;margin-left:1.5rem;background-color:#d9cdd5'}
            / אזכורים
            / עוד מאותו יוצר
            - cache "au_more_works_#{@author.id}" do
              #work-more-from-author
                .headline-3{style: 'margin:3rem 0 1.6rem 0;'}= t(:more_of_author, {author: @author.name, gender_letter: @author.gender_letter })
                %div{style:'margin-top:0'}
                  .card.full-size-card{style:'min-height:26rem'}
                    .creator-bookmark-back
                      %img{src: '/assets/creator-bookmark-back2.png', width: 168, height: 6}
                    .creator-bookmark-front
                      %img{src: @author.profile_image.url(:thumb), width: 162}
                    .card-content.near-picture
                      %p
                        %h5= t(:most_read_works_of_author, {author: @author.name, gender_letter: @author.gender_letter })
                      %ol
                        - @author.most_read(5).each do |mhash|
                          - unless mhash[:id] == @m.id # avoid linking to same work, in case it's one of the most popular
                            %p
                              %li
                                = link_to mhash[:title], manifestation_read_path(mhash[:id])
                                = " (#{textify_genre(mhash[:genre])})"
                      %p{style:'margin:3.2rem 0 0 0'}= link_to t(:to_the_works_in_the_genre_of_this_author, {author: @author.name, genre: textify_genre(@m.expressions[0].genre)}), author_toc_path(@author.id, genre: @m.expressions[0].genre)
                      %p{style:'margin:1.2rem 0 0 0'}= link_to t(:to_all_the_works_of_this_author, {author: @author.name}), author_toc_path(@author.id)

            / מי שקרא גם קרא TODO: implement
            / הפתעה
            .headline-3{style:'margin-top:3rem'}= t(:surprise)
            .card.genre-card.small-surprise{style:'height:auto; margin-top:1rem;position:relative'}
              .corner
                %img{src: '/assets/corner.png', width: 80, height: 80}
              .card-content#random_work
                = render partial: 'surprise_work', locals: {work: @random_work}
              %div{style:'z-index: 1; position: absolute; left: 0;bottom: 0%; border-bottom-left-radius: 0.3rem; display: inline;overflow: hidden'}
                %img{src:'/assets/corner.png', width: 80, height:80}
              %div
                .replace-icon.text-on-dark{style:'margin-bottom:0.6rem'}
                  %a.surprise-work-refresh{ role: :button}
                    %i.fa.fa-refresh
    .col-md-1

:javascript
  $(document).ready(function(){
    $('.surprise-work-refresh').click(function(){
      $('#random_work').load("#{url_for(action: :surprise_work)}");
    });
  });
