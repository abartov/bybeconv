%link{ rel:'stylesheet', href:'https://cdnjs.cloudflare.com/ajax/libs/tempusdominus-bootstrap-4/5.0.0-alpha14/css/tempusdominus-bootstrap-4.min.css'}
%script{ src: 'https://use.fontawesome.com/3f861a49f5.js'}

= form_tag(works_path, remote: true, method: :post, id: 'works_filters') do
  .by-card-header-v02
    .headline-2-v02= t(:sort_by)
    #sort-by
      .sort-by-desktop
        #custom-select
          %select#sort_by{name: 'sort_by'}
            %option{value: 'alphabetical'}= t(:alphabetical)
            %optgroup{label: t(:dates)}
              %option{value: 'publication_date'}= t(:publication_date)
              %option{value: 'creation_date'}= t(:creation_date)
              %option{value: 'upload_date'}= t(:upload_date)
            %option{value: 'popularity'}= t(:popularity)
      .sort-by-mobile
        %p
          %input#RadioGroupSort_1{:name => "RadioGroupSort", :type => "radio", value: "alphabet"}/
          %label= t(:alphabetical)
          %br/
          %input#RadioGroupSort_2{:name => "RadioGroupSort", :type => "radio", value: "publish_date"}/
          %label= t(:publication_date)
          %br/
          %input#RadioGroupSort_3{:name => "RadioGroupSort", :type => "radio", value: "creation_date"}/
          %label= t(:creation_date)
          %br/
          %input#RadioGroupSort_4{:name => "RadioGroupSort", :type => "radio", value: "online_date"}/
          %label= t(:upload_date)
          %br/
          %input#RadioGroupSort_5{:name => "RadioGroupSort", :type => "radio", value: "popularity"}/
          %label= t(:popularity)
          %br/
  .by-card-content-v02#filters_panel
    .headline-2-v02= t(:filter_by)
    %span.reset.linkcolor.pointer= t(:reset_filter)
    .sort-type
      .vertical-expand.fcoll#fauthor{'data-target' =>'#collfauthor', 'data-toggle' =>'collapse'}
        .sort-type-headline= t(:name)
      .nested.active.collapse.show#collfauthor
        .nested-content
          .search-mobile-switch
            %button.search-mobile-option#opt_workname{:href => "#"}= t(:work_title)
            %button.search-mobile-option#opt_authorname{:href => "#"}= t(:author_name)
          %break
          %input.field-v02.field-without-label#search_input{:placeholder => t(:what_to_search_for), name: 'search_input', :type => "text", value: @search_input}/
          = autocomplete_field_tag :authorstr, @authorstr.present? ? @authorstr : '', autocomplete_person_name_path, id_element: '#author_id', 'data-noMatchesLabel' => t(:no_matches_found), style:'display:none', 'class' => 'field-v02 field-without-label author-name-field', id: 'authors', placeholder: t(:author_names)
          = hidden_field_tag :author_id, @author_id.present? ? @author_id : nil

          .multi-name-sort.pointer{style:'display:inline-block;'}
            %span.linkcolor.pointer{'data-toggle' => 'modal', 'data-target' => '#authorsDlg'}= t(:multiselect)
          = hidden_field_tag(:search_type, id: 'search_type')
          = hidden_field_tag(:authors, @authors, id: 'authors[]')
    .sort-type
      .vertical-expand.fcoll#fgenre{'data-target' =>'#collfgenre', 'data-toggle' =>'collapse'}
        .sort-type-headline= t(:genres)
      .nested.active.collapse.show#collfgenre
        .nested-content.nested-list
          - get_genres.each do |g|
            - attrs = @genre_facet[g].nil? ? {disabled: 'disabled'} : {}
            - attrs.merge!({:name => "ckb_genres[]", :type => "checkbox", id: "genre_#{g}", value: g})
            - attrs.merge!({checked: 'checked'}) if @genres.present? && @genres.include?(g)
            %input{ attrs}/
            %label
              %span.by-icon-v02>= glyph_for_genre(g)
              = textify_genre(g)
              %span= "(#{@genre_facet[g] || '0'})"
            %br/
    .sort-type
      .vertical-expand.fcoll#fperiod{'data-target' =>'#collfperiod', 'data-toggle' =>'collapse'}
        .sort-type-headline= t(:periods)
      .nested.active.collapse.show#collfperiod
        .nested-content.nested-list
          - Expression.periods.invert.each do |p|
            - attrs = @period_facet[p[0]].nil? ? {disabled: 'disabled'} : {}
            - attrs.merge!({:name => "ckb_periods[]", :type => "checkbox", id: "period_#{p[1]}", value: p[1]})
            - attrs.merge!({checked: 'checked'}) if @periods.present? && @periods.include?(p[1])
            %input{ attrs}/
            %label
              = t(p[1])
              %span= "(#{@period_facet[p[0]] || '0'})"
            %br/
    .sort-type
      .vertical-expand.fcoll#fcopyright{'data-target' =>'#collfcopyright', 'data-toggle' =>'collapse'}
        .sort-type-headline= t(:copyright_status)
      .nested.active.collapse.show#collfcopyright
        .nested-content.nested-list
          - attrs = {name: "ckb_copyright[]", :type => "checkbox", id: 'copyright_0', value: 0}
          - attrs.merge!({disabled: 'disabled'}) if @copyright_facet[0].nil?
          - attrs.merge!({checked: 'checked'}) if @copyright.present? && @copyright.include?(0)

          %input{attrs}/
          %label
            %span.by-icon-v02> m
            = t(:public_domain)
            %span= "(#{@copyright_facet[0] || '0'})"
          %br/
          - attrs = {name: "ckb_copyright[]", :type => "checkbox", id: 'copyright_1', value: 1}
          - attrs.merge!({disabled: 'disabled'}) if @copyright_facet[1].nil?
          - attrs.merge!({checked: 'checked'}) if @copyright.present? && @copyright.include?(1)
          %input{attrs}/
          %label
            %span.by-icon-v02> x
            = t(:by_permission)
            %span= "(#{@copyright_facet[1] || '0'})"
          %br/
    / .sort-type
    /   .vertical-expand
    /     .sort-type-headline מאפיינים
    /   .nested.active
    /     .nested-content.nested-list
    /       .col-md-6.col-sm-12
    /         %input#CheckboxGroup4_1{:name => "CheckboxGroup4", :type => "checkbox", value: "sort_by_curatorial_content"}/
    /         %label
    /           תוכן אוצרותי
    /           %span (4)
    /         %br/
    /         %input#CheckboxGroup4_2{:name => "CheckboxGroup4", :type => "checkbox", value: "sort_by_recommendations"}/
    /         %label
    /           המלצות קוראים
    /           %span (12)
    /         %br/
    /         %input#CheckboxGroup4_3{:name => "CheckboxGroup4", :type => "checkbox", value: "sort_by_liked"}/
    /         %label
    /           יצירות שאהבתי
    /           %span (2)
    /       .col-md-6.col-sm-12
    /         %input#CheckboxGroup4_4{:disabled => "disabled", :name => "CheckboxGroup4", :type => "checkbox", value: "sort_by_active_bookmark"}/
    /         %label
    /           סימניה מופעלת
    /           %span (0)
    /         %br/
    /         %input#CheckboxGroup4_5{:name => "CheckboxGroup4", :type => "checkbox", value: "sort_by_no_properties"}/
    /         %label
    /           ללא מאפיינים
    /           %span (312)
    .sort-type
      .vertical-expand.fcoll#fdate{'data-target' =>'#collfdate', 'data-toggle' =>'collapse'}
        .sort-type-headline= t(:thedate)
      .nested.active.collapse.show#collfdate
        .nested-content
          .search-mobile-switch
            %button.search-mobile-option.datetype#published= t(:publication)
            %button.search-mobile-option.datetype#created= t(:creation)
            %button.search-mobile-option.datetype#uploaded= t(:upload)
            = hidden_field_tag(:date_type, id: 'date_type')
          %break
          .dates-range
            / #histogramSlider
            /.dates-graph-area
            /.range-outside
            /  .range-inside
            /    .range-handle-right
            /    .range-handle-left
            %input.datepicker.datetimepicker-input.field-v02.field-without-label.range-date-field#fromdate{:placeholder => t(:month_year), name: "fromdate", 'data-toggle' => 'datetimepicker', 'data-target' => '#fromdate' }/
            .date-range-to= t(:until)
            %input.datepicker.datetimepicker-input.field-v02.field-without-label.range-date-field#todate{:placeholder => t(:month_year), :style => "float: left", 'data-toggle' => 'datetimepicker', name: "todate", 'data-target' => '#todate'}/
    .sort-type
      .vertical-expand.fcoll#flang{'data-target' =>'#collflang', 'data-toggle' =>'collapse'}
        .sort-type-headline= t(:orig_lang)
      .nested.active.collapse.show#collflang
        .nested-content{:style => "padding-right: 0"}
          %ul
            %li
              - attrs = {name: "ckb_languages[]", :type => "checkbox", id: 'lang_he', value: 'he'}
              - attrs.merge!({disabled: 'disabled'}) if @language_facet['he'].nil? || @language_facet['he'] == 0
              - attrs.merge!({checked: 'checked'}) if @languages.present? && @languages.include?('he')
              %input{attrs}/
              %label
                = t(:hebrew)
                %span= "(#{@language_facet['he'] || '0'})"
            %li
              - attrs = {name: "ckb_languages[]", :type => "checkbox", id: 'lang_xlat', value: 'xlat'}
              - attrs.merge!({disabled: 'disabled'}) if @language_facet[:xlat].nil? || @language_facet[:xlat] == 0
              - attrs.merge!({checked: 'checked'}) if @languages.present? && @languages.include?('xlat')
              %input{attrs}/
              %label
                = t(:translations)
                %span= "(#{@language_facet[:xlat] || '0'})"
              .languages-filters
                %ul.nested-list#xlat_langs
                  - @language_facet.sort{|a,b| b[1] <=> a[1]}.each do |lang, amount|
                    - next if lang == :xlat || lang == 'he'
                    %li
                      - attrs = {name: "ckb_languages[]", :type => "checkbox", id: "lang_#{lang}", value: lang}
                      - attrs.merge!({checked: 'checked'}) if @languages.present? && @languages.include?(lang)
                      %input{attrs}/
                      %label
                        = textify_lang(lang)
                        %span= "(#{amount || '0'})"
    = hidden_field_tag(:emit_filters, 'true', id: 'emit_filters')
    = hidden_field_tag(:cur_page, @page, id: 'cur_page_tag')
    = hidden_field_tag(:page, '', id: 'page_tag')
    = hidden_field_tag(:to_letter, '', id: 'toletter_tag')
:javascript
  $(document).ready(function() {
    $('#sort_by').val("#{@sort}");
    if("#{@search_type}" == 'authorname') {
      $('#opt_authorname').addClass('active');
      $('.multi-name-sort').show();
      $('#authors').show();
      $('#search_input').hide();
      $('#search_type').val('authorname');
    } else {
      $('.multi-name-sort').hide();
      $('#opt_workname').addClass('active');
      $('#search_type').val('workname');
    }
    $('.datetype').click(function(e) {
      e.preventDefault();
      $('.datetype').removeClass('active');
      $(this).addClass('active');
      $('#date_type').val($(this).attr('id'));
    });
    $('#opt_authorname').click(function(e){
      e.preventDefault();
      $('#opt_workname').removeClass('active');
      $('#opt_authorname').addClass('active');
      $('#authors').show();
      $('#search_input').hide();
      $('#search_type').val('authorname');
      $('.multi-name-sort').show();
    });
    $('#opt_workname').click(function(e){
      e.preventDefault();
      $('#opt_workname').addClass('active');
      $('#opt_authorname').removeClass('active');
      $('#authors').hide();
      $('#search_input').show();
      $('#search_type').val('workname');
      $('.multi-name-sort').hide();
    });
    var submit_timeout = null;
    $('#works_filters').change(function(){
      if(submit_timeout != null){
        window.clearTimeout(submit_timeout);
      }
      $('#page_tag').val('1'); // reset pagination
      submit_timeout = window.setTimeout(submit_filters, 300);
    });
    function submit_filters() {
      startModal('spinnerdiv');
      $('#works_filters').submit();
    }
    $('.reset').click(function(){
      $('#works_filters').find(':input').each(function() {
        switch(this.type) {
            case 'password':
            case 'select-multiple':
            case 'select-one':
            case 'text':
            case 'textarea':
                $(this).val('');
                break;
            case 'checkbox':
            case 'radio':
                this.checked = false;
        }
      });
      startModal('spinnerdiv');
      $('#emit_filters').val('true');
      $('#page_tag').val('1'); // reset pagination
      $('#toletter_tag').val(''); // reset pagination
      $('#works_filters').submit();
    });
    $('#lang_xlat').change(function(){
      // set all translated languages on/off accordingly
      var checked = $(this).is(":checked");
      $('#xlat_langs input').each(function(li){
        $(this).prop('checked', checked);
      });
    });
    var should_check_xlat = $('#xlat_langs input').length > 0;
    $('#xlat_langs input').each(function(li){
      if($(this).prop('checked') == false) {
        should_check_xlat = false;
      }
    });
    if(should_check_xlat) {
      $('#lang_xlat').prop('checked', true);
    }
    if("#{@datetype}" == "") {
      $('#created').addClass('active');
      $('#date_type').val('created');
    } else {
      $("##{@datetype}").addClass('active');
      $('#date_type').val("#{@datetype}");
    }
    $('.datepicker').datetimepicker({
      viewMode: 'years',
      rtl: true,
      format: 'L',
      locale: 'he',
      format: 'YYYY/MM',
      maxDate: '#{@maxdate}',
      useCurrent: false,
      widgetPositioning: {horizontal: 'right', vertical: 'auto'},
      icons: {
        previous: 'fa fa-chevron-right',
        next: 'fa fa-chevron-left',
      }
    }).on('hide.datetimepicker', function(e){
      window.setTimeout(submit_filters, 2000);
    });
    if("#{@fromdate}" != "") {
      $('#fromdate').val("#{@fromdate}");
    }
    if("#{@todate}" != "") {
      $('#todate').val("#{@todate}");
    }
  });
