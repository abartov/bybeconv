.top-element
#content.container-fluid
  - cauthors = @collection.authors
  - ceditors = @collection.editors
  - ctranslators = @collection.translators
  .row.text-page-content
    .col-12.col-lg-8
      .logo-for-print
        %img.logoBY-v02{alt: "", src: "/assets/logo-byp-mobile.svg"}/
      .row
        .col.work-side-menu-area
        .col.work-col.near-side-menu
          .by-card-v02.work-info-card
            %img.about-work-card-bookmark-fold-v02{alt: "", src: "/assets/creator-bookmark-back2.png"}/
            .about-work-author-card-v02
              %img.about-work-author-pic-v02{alt: @authority_for_image.name, src: @authority_for_image.profile_image.url(:thumb)}/
            .by-card-content-v02
              .work-title.name-under-btn
                .headline-1-v02
                  = @collection.title
                  - if @collection.subtitle.present?
                    %br
                    %span{style:'font-size:80%;'}= @collection.subtitle
                  %span.metadata-link-icon.binder-icon G
                - if current_user && current_user.editor?
                  = link_to collection_manage_path(@collection.id), {style:'color:white;'} do
                    %span.by-button-v02.pointer{style: 'width: min-content;'}= t(:edit)
                .headline-1-v02
                  - if @collection.authors.present?
                    != @collection.authors.map { |t| link_to(t.name, authority_path(t)) }.join(', ')
                  - if @collection.editors.present?
                    = t(:edited_by)
                    != @collection.editors.map { |t| link_to(t.name, authority_path(t)) }.join(', ')
                  - if @collection.illustrators.present?
                    .headline-3-v02
                      = "#{t(:illustrations_by)}: "
                      != @collection.illustrators.map { |t| link_to(t.name, authority_path(t)) }.join(', ')

                -# %button.by-button-v02{href: "#"} יוצרים שונים
                - if @collection.parent_collections.present?
                  - @collection.parent_collections.each do |pc|
                    - if pc.periodical? && @collection.periodical_issue?
                      = link_to "#{t(:issue_of)} #{pc.title}", collection_path(pc)
                    - else
                      = link_to "#{t(:inside)} #{pc.title}#{pc.subtitle.present? ? ': '+pc.subtitle : ''}", collection_path(pc)

              %div
                .edition-details
                  - edition = "#{@collection.publisher_line}".strip
                  - if @collection.pub_year.present?
                    - edition = edition[0..-1] if edition[-1] == ','
                    - edition += '; '+@collection.pub_year unless edition[-1] == ';'
                  - if edition.present?
                    %span{:style => "font-weight:bold"}= t(:source_edition)+': '
                    = edition
                .metadata{style: "gap: 20px"}
                  - @collection.intellectual_property_statuses.each do |intellectual_property|
                    = render partial: 'shared/intellectual_property', locals: {intellectual_property: intellectual_property}
                .metadata{style: "gap: 20px"}
                  - @collection.included_genres.each do |genre|
                    %div
                      %span.by-icon-v02= glyph_for_genre(genre)
                      = textify_genre(genre)
                - if @collection.periodical? # we won't usually know the complete issue count of periodicals in progress, and counting extant issues only would imply the periodical run is complete
                  .metadata= t(:x_issues_available, x: @collection.collection_items.count)
                - elsif @collection_minus_placeholders == @collection_total_items
                  .metadata= t(:full_collection_available, ctype: textify_collection_type(@collection.collection_type))
                - else
                  .metadata= t(:x_of_y_items_available, x: @collection_minus_placeholders, y: @collection_total_items, ctype: textify_collection_type(@collection.collection_type))
                -#.metadata.mobile-work-details
                -#  %span{style: "font-weight:bold"} המלצות:
                -#  %a{href: "#"} 3 המלצות קוראים

          :ruby
            eauthors = {}
            @htmls.each do |title, ias, html, is_curated, genre, i, ci|
              effective_authors = ias.select{|ia| ia.role == 'author'}.map(&:authority).reject{|a| cauthors.map(&:id).include?(a.id)}
              eauthors[title] = effective_authors.map(&:name).join(', ') if effective_authors.present?
            end
          - if eauthors.present?
            .by-card-v02.binder-texts-list
              .by-card-content-v02
                .list-no-bullets
                  %ul
                    - @htmls.each do |title, ias, html, is_curated, genre, i, ci|
                      %li
                        - if html.present?
                          %a.side-menu-item{href: "#collitem_text_#{i}", 'data-target' => "collitem_text_#{i}"}
                            %span.by-icon-v02{title: textify_genre(genre) }= glyph_for_genre(genre)
                            - if eauthors[title].present?
                              = "#{title} / #{eauthors[title]}"
                            - else
                              = title
                        - else
                          = title

          - @htmls.each do |title, ias, html, is_curated, genre, i, ci|
            %a{ name: "collitem_text_#{i}" }
            - proofable_class = ci.item_type == 'Manifestation' ? 'proofable' : ''
            .by-card-v02{ class: proofable_class, data: { item_id: ci.item_id, item_type: ci.item_type } }
              - if title.present?
                .by-card-header-v02
                  .by-icon-v02
                  .headline-1-v02
                    - link = url_for_collection_item(ci)
                    - tstr = eauthors[title].present? ? "#{title} / #{eauthors[title]}" : title
                    - if link.present?
                      %span.by-icon-v02{title: textify_genre(genre)}= glyph_for_genre(genre)
                      = link_to tstr, link
                    - else
                      = tstr
                    - translators = ias.select{|ia| ia.role == 'translator'}.map(&:authority).reject{|a| ctranslators.map(&:id).include?(a.id)}
                    - if translators.present?
                      %p= "#{t(:translated_by)} #{translators.map(&:name).join(', ')}"
              .by-card-content-v02#actualtext
                != html
          - credit_lines = @collection.fetch_credits.lines
          - if credit_lines.present?
            .by-card-v02
              .by-card-header-v02
                .by-icon-v02
                .headline-1-v02= t(:volunteers_who_helped_collection)
              .by-card-content-v02
                %ul
                  - credit_lines.each do |line|
                    %li= line
    .col-12.col-lg-4
      .row
        .col
          -# Tags
          .by-card-v02.left-side-card-v02
            .by-card-header-left-v02
              %span.headline-1-v02= t(:tags)
              .new-tag-teaser= t(:excited_new)
              .new-tag-teaser-text= t(:new_tag_teaser)
            .by-card-content-v02.card-with-bottom-links
              .inline-block#taggings
                = render partial: 'shared/taggings', locals: {taggings: @taggings, taggable: @collection}
              - unless current_user.nil? || current_user.blocked?
                = hidden_field_tag :accepted_tag_policy, @bu.present? ? @bu.get_preference(:accepted_tag_policy) : 'false', id: 'accepted_tag_policy'
              #add-tag.card-bottom
                .link-to-all-v02
                  %button.by-button-v02.must-login#initiate-add-tag
                    .metadata-link-icon.small-icon.pointer &amp;
                    %div= t(:suggest_new_tag)

          -#.by-card-v02.left-side-card-v02#recs
          -#  - ctype = textify_collection_type(@collection.collection_type)
          -#  .by-card-header-left-v02
          -#    %span.headline-1-v02= t(:recommendations_for_collection, ctype: ctype)
          -#  .by-card-content-v02
          -#    - if @collection.like_count.present?
          -#      = t(:x_liked_ctype, x: @collection.like_count, ctype: ctype)
          -#      %br
          -#    - if @total_recs > 0
          -#      -# TODO: add recs for the collection itself, after Recommendations are made polymorphic
          -#      - if @included_recs > 0
          -#        = t(:works_in_this_collection_have_x_recommendations, x: @included_recs, ctype: ctype)
          -#    - else
          -#      = t(:no_recommendations_yet)
          -#    -# TODO: add add-a-recommendation UI

          -#/ יצירות על אודות
          -#.by-card-v02.left-side-card-v02
          -#  .by-card-header-left-v02
          -#    .by-icon-v02 )
          -#    .headline-1-v02 יצירות על אודות
          -#  .by-card-content-v02.card-with-bottom-links
          -#    ישנן 4 יצירות על אודות אסופה זו ו/או יצירות המופיעות בה
          -#/ תרגומים נוספים
          -#.by-card-v02.left-side-card-v02
          -#  .by-card-header-left-v02
          -#    .by-icon-v02 )
          -#    .headline-1-v02 תרגומים נוספים
          -#  .by-card-content-v02.card-with-bottom-links
          -#    ישנם 2 תרגומים נוספים נוספים ליצירות המופיעות בקובץ יצירות זה
-#.by-card-v02
-#  = render partial: 'collection', locals: { collection: @collection, focused: true, label_ci_types: false }

#downloadDlg.modal{'aria-hidden' => 'true', role: 'dialog', tabindex: '-1'}
  = render partial: 'shared/download', locals: {entity: @collection}

= render partial: 'shared/proof'

:javascript
  $(document).ready(function() {
    $('#initiate-add-tag').click(function(e) {
      if("#{current_user}" != '') {
        if($('#accepted_tag_policy').val() != 'false') {
          $('#generalDlg').load("#{ add_tagging_popup_path(taggable_id: @collection.id, taggable_type: 'Collection') }");
          $('#generalDlg').modal('show');
        }
        else
          $('#tagPolicyDlg').modal({  backdrop: 'static', keyboard: false, show: true});
      } else {
        e.stopPropagation();
        alert("#{t(:must_login_for_this)}");
        return;
      }
    });
  });