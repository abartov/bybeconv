!= "<script src=\"https://unpkg.com/stackedit-js@1.0.5/docs/lib/stackedit.min.js\"></script>"
.top-element
  = form_tag(action: 'edit_markdown', id: @text.id) do
    .container-fluid
      .row
        .col-md-12
          %span.btn#vised{style: 'float:none;font-size:150%;height:auto'}= t(:launch_visual_editor)
      .row
        .col-md-6
          - if @text.has_splits
            %h1{style:'color:green'}= "** #{t(:split_work_mode)} **"
            %p!= t(:split_work_mode_intro)
          - else
            %h2= @text.title
        .col-md-6
          - unless @text.person.nil?
            %h3
              = t(:by)+' '
              = link_to @text.person.name+' ('+t(:author)+')', authors_show_path(id: @text.person.id)
              - unless @text.translator.nil?
                = t(:translated_by)+' '
                = link_to @text.translator.name+' ('+t(:translator)+')', authors_show_path(id: @text.translator.id)
            = t(:publisher)+": #{@text.publisher}; #{t(:year_published)}: #{@text.year_published}"
          %h3= label_tag t(:orig_lang)
          %br
          = select_tag 'orig_lang', options_for_select(get_langs.map {|lang| [textify_lang(lang), lang]}, @text.orig_lang)
          %h3= label_tag(:genre, t(:genre))
          = select_tag(:genre, options_for_select(get_genres.map {|genre| [I18n.t(genre), genre]}, @text.genre), {include_blank: true})
      .row
        .col-md-12
          .markdown_container
            %div{ style:"vertical-align:top; width: 40%;display:flex;margin-right:10px;flex-direction:column;height:100%;box-sizing:border-box;float:left;padding-right:7px;"}
              #legacy_markdown_link
                %h2= t(:markdown)
              .markdown= text_area_tag(:markdown, raw(@markdown), class: 'textarea100')
            %h2= t(:display_text)
            #preview{ style:"vertical-align:top; width: 60%; padding-left:10px;padding-right:15px;background:#d2cfcf;"}
              != raw(@html)
              %br
      .row
        .col-md-12
          %h3= t(:comments)
          = text_area_tag(:comments, @text.comments)
          %br
          %b
            = submit_tag t(:save_and_update_display)

          %h3= t(:actions)
          %ul
            %li
              %b
                - if @text.genre.nil? or @text.genre.empty?
                  = t(:must_set_genre)
                - elsif @text.status == 'Accepted'
                  != link_to t(:publish), action: :publish, id: @text.id
                - elsif @text.status != 'Published'
                  != raw(t(:accept_conversion_and) + link_to(t(:frbrize), html_file_frbrize_path(@text), id: 'frbrize_button'))

:javascript
  jQuery(document).ready(function() {
    var newsize = $('.markdown_container').height() - $('#legacy_markdown_link').height(); // this is horrible, but I've given up on getting the textarea to auto-fill the container height. :((
    if(newsize < 150)
      newsize = 150;
    $('.markdown').css('height', newsize);
    $('.textarea100').css('height', newsize);
    $('.textarea100').css('overflow-y', 'scroll');
    if(#{@text.has_splits ? true : false})
      $('#frbrize_button').click(function(e){
        e.preventDefault();
        if((/&&& /.test($('#markdown').val( ))) && (/^\s*\S+\s*&&& /.test($('#markdown').val()))) {
            alert("#{t(:non_whitespace_before_first_part)}");
        } else {
          alert("#{t(:careful_with_splits)}");
          $('#frbrize_button').off('click'); // show only once
        }
      });
    $('#vised').click(function() {
      const el = document.querySelector('#markdown');
      const pv = document.querySelector('#preview');
      const stackedit = new Stackedit({
          url: 'https://stackedit.benyehuda.org/app'
      });
      // Open the iframe
      stackedit.openFile({
        name: 'מארקדאון', // with an optional filename
        content: {
          text: el.value // and the Markdown content.
        }
      });
      // Listen to StackEdit events and apply the changes to the textarea.
      stackedit.on('fileChange', (file) => {
        el.value = file.content.text;
        pv.innerHTML = file.content.html;
      });
    });
  });


:javascript

  jQuery(document).ready(function() {


  });
