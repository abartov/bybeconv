= form_for text, url: {action: action, id: text.id} do |f|
  - if text.errors.any?
    #error_explanation
      %h2= "#{pluralize(text.errors.count, "error")} prohibited this text from being saved:"
      %ul
        - text.errors.full_messages.each do |msg|
          %li= msg

  .backend-field
    = f.label t(:title)
    = f.text_field :title, required: true
  .backend-field
    = f.label t(:genre)
    = select_tag 'html_file[genre]', options_for_select(get_genres.map {|genre| [I18n.t(genre), genre]}, @text.genre), {include_blank: true}
  .backend-field
    = f.label t(:first_author)
    %br
    = select_tag 'html_file[person_id]', options_from_collection_for_select(Person.order(:name), 'id','name'), include_blank: true
  .backend-field
    = f.label t(:translator)
    %br
    = select_tag 'html_file[translator_id]', options_from_collection_for_select(Person.order(:name), 'id','name'), include_blank: true
  %br
  = link_to t(:to_manage_people), authors_list_path
  %br
  .backend-field
    = f.label t(:publisher)
    = f.text_field :publisher, required: true
  %br
  .backend-field
    = f.label t(:year_published)
    = f.text_field :year_published
  %br
  .backend-field
    = f.label t(:orig_lang)
    %br
    = select_tag 'html_file[orig_lang]', options_for_select(get_langs.map {|lang| [textify_lang(lang), lang]}, @text.orig_lang)

  .backend-field
    %b= t(:upload_file)
    = f.file_field :doc
  = t(:file_can_be_skipped)
  .actions
    %b= f.submit t(:save)
  %br
  .backend-field
    = f.label t(:comments)
    = f.text_area :comments
  %br
:javascript
  $(document).ready(function() {
    
    // form validations
    // ensure edition details typed
  });