version: 2.1
jobs:
  build:
    # Primary container image where all commands run
    docker:
      - image: damisul/bybeconv-circleci:0.0.3
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          RAILS_ENV: test
      - image: circleci/mysql:5.7
        auth:
          username: mydockerhub-user
          password: $DOCKERHUB_PASSWORD  # context / project UI env-var reference
        environment:
          MYSQL_ROOT_PASSWORD: rootpw
          MYSQL_DATABASE: bybe_test
          MYSQL_USER: bybe_test
          MYSQL_PASSWORD: bybe_test
      - image: docker.elastic.co/elasticsearch/elasticsearch:6.8.20
        environment:
          - cluster.name: elasticsearch
          - xpack.security.enabled: false
          - transport.host: localhost
          - network.host: 127.0.0.1
          - http.port: 9200
          - discovery.type: single-node
    steps:
      - checkout
      - restore_cache:
          keys:
            - bundle-{{ checksum "Gemfile.lock" }}
      - run:
          # Our primary container isn't MYSQL so run a sleep command until it's ready.
          name: Waiting for MySQL to be ready
          command: |
            for i in `seq 1 10`;
            do
            nc -z 127.0.0.1 3306 && echo Success && exit 0
            echo -n .
            sleep 1
            done
            echo Failed waiting for MySQL && exit 1
      - run:
          name: Copying test configuration
          command: |
            cp ./.circleci/config/* ./config
      - run:
          name: Installing bundler
          command: gem install bundler -v 1.17.3
      - run:
          name: Install dependencies and clean deprecated
          command: bundle install --path=vendor/bundle && bundle clean --force
      - save_cache:
          key: bundle-{{ checksum "Gemfile.lock" }}
          paths:
            - vendor/bundle
      - run:
          name: Database Setup
          command: bundle exec rails db:migrate
      - run:
          name: Running tests
          command: bin/rails test
